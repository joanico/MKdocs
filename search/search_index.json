{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Benvindu mai vizita MKDocs \u00b6 Hah\u00fa MkDocs \u00b6 Mkdocs mak jerador situs static ida nebe deze\u00f1a ona hodi dezenvole situs web dokumentasaun hanesan python no sira seluk. Iha l\u00edngua programasaun python, MkDocs mak projetu open source ka rekursu ida ne\u2019e nakloke ho apoiu barak hosi komunidade. Rekursu nebe uza hodi hakerek dokumentu sira mak uza rekursu markdown no konfigura uza rekursu yaml atu hatene konaba oinsa uza markdown bele lee nia referensia iha nee Markdown no rekursu yaml bele hare iha ne\u2019e Yaml . Iha karakter\u00edstika boot barak ne\u2019eb\u00e9 inklui: Bele host iha nebe deit Theme diak no disponibilidade hadia Dokumentasaun ho Markdown Install Mkdocs \u00b6 Install ho jerente pakote Se karik uza ona pakote (hanesan apt-get , dnf , homebrew , yum , chocolatey , no sira seluk) nee ita bele buka install pakote refere konaba install \u201cMkDocs\u201d no bele hare nia versaun. Se karik ita nia jestora pakote la iha pakote \u201cMkDocs\u201d, ita bele uza nafatin ita boot nia pakote hodi instala \u201c Python \u201d no \u201c pip \u201d. Depois ita bele uza pip hodi instala MkDocs. MkDocs suporta Python versions 3.5, 3.6, 3.7, 3.8, no pypy3. Atu install mkdocs hanesan tuir mai no bele hare detallu husi instala MkDocs : $ pip install mkdocs Hafoin install ita bele hare verzaun Mkdocs nebe ita foin install. $ mkdocs --version mkdocs, version 1.1.2 from /home/nicko/.pyenv/versions/Devel/envs/mkdocs/lib/python3.8/site-packages/mkdocs (Python 3.8) Kria Projetu Foun \u00b6 Kria projetu foun iha MkDocs hanesan tuir mai nee. $ mkdocs new Mkdocs $ cd Mkdocs Konfigura mkdocs.yml ba ita nia projetu mkdocs mak hanesan docs/index.md ida nebe halo ho Markdown parte pajina dahuluk ita nia dokumentasaun. . \u2514\u2500\u2500 MKdocs \u251c\u2500\u2500 docs \u2502 \u251c\u2500\u2500 index.md \u2514\u2500\u2500 mkdocs.xml Ita bele edita file index.md no bele aumenta detallu konaba ita nia projetu no tuir mai ita bele hari ita nia dokumentasaun liu husi run mkdocs serve: Exekuta Projetu \u00b6 $ mkdocs serve INFO - Building documentation... INFO - Cleaning site directory [I 160402 15:50:43 server:271] Serving on http://127.0.0.1:8000 [I 160402 15:50:43 handlers:58] Start watching changes [I 160402 15:50:43 handlers:60] Start detecting changes Loke http://127.0.0.1:8000/ iha ita nia browser web atu hare dokumentasaun. Ita bele halo mudansa ba ita nia file Markdown no ita nia docs nebe sei kria automatikamente. Bele hare rezultadu. Aumenta dokumentasaun markdown foun \u00b6 Mkdocs fo abilidade ba ita atu kontinua aumenta ita nia dokumentasaun ho rekursu markdown nian ba dokumentasaun nebe ita rai sei rai iha pasta ka directory docs Bele hare exemplu : . \u2514\u2500\u2500 MKdocs \u251c\u2500\u2500 docs \u2502 \u251c\u2500\u2500 about.md \u2502 \u251c\u2500\u2500 execute_python_syntax.md \u2502 \u251c\u2500\u2500 index.md \u2502 \u251c\u2500\u2500 python_advanced_tutorials.md \u2502 \u251c\u2500\u2500 python_environment_setup.md \u2502 \u251c\u2500\u2500 python_notifikasaun.md \u2502 \u251c\u2500\u2500 python_other_tutorials.md \u2502 \u251c\u2500\u2500 python_overview.md \u2502 \u251c\u2500\u2500 python_tutorial.md \u2502 \u2514\u2500\u2500 python_variables.md \u2514\u2500\u2500 mkdocs.yml Kria nav ka menu \u00b6 Iha exemplu leten ita aumenta ona dokumentasaun ho mardown iha directory docs nia laran hamutuk ho index.md tuir mai ita presiza defini hanesan menu ka dropdown menu iha mkdocs.yml nia laran hanesan iha exemplu tuir mai: site_name: Niko Docs # ida nee kria navbar ka menu nav: - Matadalan: - 'Python Tutorial': 'python_tutorial.md' - Python Baziku: - 'Python Introdusaun': 'python_overview.md' - 'Python Kria Enviromentu': 'python_environment_setup' - 'Python Sintase': 'execute_python_syntax.md' - 'Python Variabel': 'python_variables.md' - Python Avansadu: - 'Python Tutorial Avansadu': 'python_advanced_tutorials.md' - Python Tutorial Seluk: - 'Python Tutorial Seluk': 'python_other_tutorials.md' - Python Topiku: - 'Python Notifikasaun': 'python_notifikasaun.md' - Konaba: - 'Referensia': 'about.md' Troka theme mkdocs \u00b6 Ita bele troka theme iha mkdocs mak hanesan: #Kria tema theme: name: readthedocs #iha nebe ita bele troka readthedocs tema ba mkdocs nav_style: red highlightjs: true hljs_languages: - yaml - rust Kria extra css no Image \u00b6 Iha mkdocs ita bele muda style tuir ita nia hakarak liu husi extra css ka ita bele uza image liu husi kria extra img iha mkdocs nia laran. Bele hare iha exemplu tuir mai ne\u2019e. . \u2514\u2500\u2500 MKdocs \u251c\u2500\u2500 css \u2502 \u251c\u2500\u2500 theme.css \u2502 \u2514\u2500\u2500 theme_extra.css \u251c\u2500\u2500 docs \u2502 \u251c\u2500\u2500 extra_css \u2502 \u2502 \u2514\u2500\u2500 extra.css #Kria extra css \u2502 \u251c\u2500\u2500 img \u2502 \u2502 \u2514\u2500\u2500 var.png #Kria extra img \u2502 \u251c\u2500\u2500 index.md \u2502 \u251c\u2500\u2500 python_overview.md \u2502 \u2514\u2500\u2500 python_variables.md \u251c\u2500\u2500 fonts \u2502 \u251c\u2500\u2500 fontawesome-webfont.eot \u251c\u2500\u2500 img \u2502 \u251c\u2500\u2500 favicon.ico \u2514\u2500\u2500 mkdocs.xyml Exemplu troka style heading 2 husi markdown nia iha extra.css h2 { color: red; } span.caption-text { color: cornflowerblue; } Hari situs mkdocs \u00b6 Hari ita nia dokumentasaun sai hanesan situs. Mkdocs sei fo aumatikamente dokumentu sira sei forma ho HTML index.html file no pasta ka directory no fo file static sira hanesan css , font , img ba directory. Atu hari ita nia situs ita sei run mkdocs build no wainhira ita atu update ka aumenta dokumentasaun ruma ita presiza hamos directory tuan no koko hari fila fali maneira hamoos mak ita exekuta mkdocs buil --clean iha exemplu ida ne\u2019e sei hatudu deit konaba oinsa hari ita nia situs. $ mkdocs build Sei hatudu rezultadu hanesan: $ ls 404.html css fonts index.html mkdocs.yml search.html sitemap.xml about docs img js python search site Deploy situs Mkdocs \u00b6 MKdocs ita bele host Ita nia projetu bainhira ita nia dokumentasaun iha ona repository ida nebe p\u00fabliku hanesan GitHub, Bitbucket ka GitLab, ita bele hah\u00fa uza Read Docs nian iha importasaun docs ita-nia ka deploy mkdocs Iha dokumentasaun ida nee sei hatudu deit konaba deploy ba repository iha github nia mak hanesan kria repository foun kria github repository fo naran no tuir mai ita clone mai virtualenv local. Nota: Atu deploy ho github ba dahuluk ita presiza kria file .gitignore atu nune la bele deploy hotu directory site/ ba ita nia repository. atu kria .gitignore mak hanesan: $ echo \"site/\" >> .gitignore Atu deploy ita nia dokumentasaun ita exekuta $ mkdocs gh-deploy Exekusaun kodigu ida leten iha kualker branch nebe deit maibe detallu iha master , ho mkdocs wainhira ita deploy no run mkdocs gh-deploy sei autamatika kria branch uniku ida no espesifiku ba deploy ita nia situs deit, hafoin ita deploy sei kria link ita nia account github nia exemplu https://joanico.github.io/MKdocs/ tuir mai ita bele ona asesu ita nia dokumentasaun iha kualker fatin ne\u2019e deit. Rekursu esterna \u00b6 Iha ne\u02bce iha rekursu estern\u00e1l balu atu ajuda ita aprende tan kona-ba MkDocs. MkDocs dokumentasaun Markdown syntax matadalan Hakerek ba imi-nia docs ho MkDocs","title":"Home"},{"location":"#benvindu-mai-vizita-mkdocs","text":"","title":"Benvindu mai vizita MKDocs"},{"location":"#hahu-mkdocs","text":"Mkdocs mak jerador situs static ida nebe deze\u00f1a ona hodi dezenvole situs web dokumentasaun hanesan python no sira seluk. Iha l\u00edngua programasaun python, MkDocs mak projetu open source ka rekursu ida ne\u2019e nakloke ho apoiu barak hosi komunidade. Rekursu nebe uza hodi hakerek dokumentu sira mak uza rekursu markdown no konfigura uza rekursu yaml atu hatene konaba oinsa uza markdown bele lee nia referensia iha nee Markdown no rekursu yaml bele hare iha ne\u2019e Yaml . Iha karakter\u00edstika boot barak ne\u2019eb\u00e9 inklui: Bele host iha nebe deit Theme diak no disponibilidade hadia Dokumentasaun ho Markdown","title":"Hah\u00fa MkDocs"},{"location":"#install-mkdocs","text":"Install ho jerente pakote Se karik uza ona pakote (hanesan apt-get , dnf , homebrew , yum , chocolatey , no sira seluk) nee ita bele buka install pakote refere konaba install \u201cMkDocs\u201d no bele hare nia versaun. Se karik ita nia jestora pakote la iha pakote \u201cMkDocs\u201d, ita bele uza nafatin ita boot nia pakote hodi instala \u201c Python \u201d no \u201c pip \u201d. Depois ita bele uza pip hodi instala MkDocs. MkDocs suporta Python versions 3.5, 3.6, 3.7, 3.8, no pypy3. Atu install mkdocs hanesan tuir mai no bele hare detallu husi instala MkDocs : $ pip install mkdocs Hafoin install ita bele hare verzaun Mkdocs nebe ita foin install. $ mkdocs --version mkdocs, version 1.1.2 from /home/nicko/.pyenv/versions/Devel/envs/mkdocs/lib/python3.8/site-packages/mkdocs (Python 3.8)","title":"Install Mkdocs"},{"location":"#kria-projetu-foun","text":"Kria projetu foun iha MkDocs hanesan tuir mai nee. $ mkdocs new Mkdocs $ cd Mkdocs Konfigura mkdocs.yml ba ita nia projetu mkdocs mak hanesan docs/index.md ida nebe halo ho Markdown parte pajina dahuluk ita nia dokumentasaun. . \u2514\u2500\u2500 MKdocs \u251c\u2500\u2500 docs \u2502 \u251c\u2500\u2500 index.md \u2514\u2500\u2500 mkdocs.xml Ita bele edita file index.md no bele aumenta detallu konaba ita nia projetu no tuir mai ita bele hari ita nia dokumentasaun liu husi run mkdocs serve:","title":"Kria Projetu Foun"},{"location":"#exekuta-projetu","text":"$ mkdocs serve INFO - Building documentation... INFO - Cleaning site directory [I 160402 15:50:43 server:271] Serving on http://127.0.0.1:8000 [I 160402 15:50:43 handlers:58] Start watching changes [I 160402 15:50:43 handlers:60] Start detecting changes Loke http://127.0.0.1:8000/ iha ita nia browser web atu hare dokumentasaun. Ita bele halo mudansa ba ita nia file Markdown no ita nia docs nebe sei kria automatikamente. Bele hare rezultadu.","title":"Exekuta Projetu"},{"location":"#aumenta-dokumentasaun-markdown-foun","text":"Mkdocs fo abilidade ba ita atu kontinua aumenta ita nia dokumentasaun ho rekursu markdown nian ba dokumentasaun nebe ita rai sei rai iha pasta ka directory docs Bele hare exemplu : . \u2514\u2500\u2500 MKdocs \u251c\u2500\u2500 docs \u2502 \u251c\u2500\u2500 about.md \u2502 \u251c\u2500\u2500 execute_python_syntax.md \u2502 \u251c\u2500\u2500 index.md \u2502 \u251c\u2500\u2500 python_advanced_tutorials.md \u2502 \u251c\u2500\u2500 python_environment_setup.md \u2502 \u251c\u2500\u2500 python_notifikasaun.md \u2502 \u251c\u2500\u2500 python_other_tutorials.md \u2502 \u251c\u2500\u2500 python_overview.md \u2502 \u251c\u2500\u2500 python_tutorial.md \u2502 \u2514\u2500\u2500 python_variables.md \u2514\u2500\u2500 mkdocs.yml","title":"Aumenta dokumentasaun markdown foun"},{"location":"#kria-nav-ka-menu","text":"Iha exemplu leten ita aumenta ona dokumentasaun ho mardown iha directory docs nia laran hamutuk ho index.md tuir mai ita presiza defini hanesan menu ka dropdown menu iha mkdocs.yml nia laran hanesan iha exemplu tuir mai: site_name: Niko Docs # ida nee kria navbar ka menu nav: - Matadalan: - 'Python Tutorial': 'python_tutorial.md' - Python Baziku: - 'Python Introdusaun': 'python_overview.md' - 'Python Kria Enviromentu': 'python_environment_setup' - 'Python Sintase': 'execute_python_syntax.md' - 'Python Variabel': 'python_variables.md' - Python Avansadu: - 'Python Tutorial Avansadu': 'python_advanced_tutorials.md' - Python Tutorial Seluk: - 'Python Tutorial Seluk': 'python_other_tutorials.md' - Python Topiku: - 'Python Notifikasaun': 'python_notifikasaun.md' - Konaba: - 'Referensia': 'about.md'","title":"Kria nav ka menu"},{"location":"#troka-theme-mkdocs","text":"Ita bele troka theme iha mkdocs mak hanesan: #Kria tema theme: name: readthedocs #iha nebe ita bele troka readthedocs tema ba mkdocs nav_style: red highlightjs: true hljs_languages: - yaml - rust","title":"Troka theme mkdocs"},{"location":"#kria-extra-css-no-image","text":"Iha mkdocs ita bele muda style tuir ita nia hakarak liu husi extra css ka ita bele uza image liu husi kria extra img iha mkdocs nia laran. Bele hare iha exemplu tuir mai ne\u2019e. . \u2514\u2500\u2500 MKdocs \u251c\u2500\u2500 css \u2502 \u251c\u2500\u2500 theme.css \u2502 \u2514\u2500\u2500 theme_extra.css \u251c\u2500\u2500 docs \u2502 \u251c\u2500\u2500 extra_css \u2502 \u2502 \u2514\u2500\u2500 extra.css #Kria extra css \u2502 \u251c\u2500\u2500 img \u2502 \u2502 \u2514\u2500\u2500 var.png #Kria extra img \u2502 \u251c\u2500\u2500 index.md \u2502 \u251c\u2500\u2500 python_overview.md \u2502 \u2514\u2500\u2500 python_variables.md \u251c\u2500\u2500 fonts \u2502 \u251c\u2500\u2500 fontawesome-webfont.eot \u251c\u2500\u2500 img \u2502 \u251c\u2500\u2500 favicon.ico \u2514\u2500\u2500 mkdocs.xyml Exemplu troka style heading 2 husi markdown nia iha extra.css h2 { color: red; } span.caption-text { color: cornflowerblue; }","title":"Kria extra css no Image"},{"location":"#hari-situs-mkdocs","text":"Hari ita nia dokumentasaun sai hanesan situs. Mkdocs sei fo aumatikamente dokumentu sira sei forma ho HTML index.html file no pasta ka directory no fo file static sira hanesan css , font , img ba directory. Atu hari ita nia situs ita sei run mkdocs build no wainhira ita atu update ka aumenta dokumentasaun ruma ita presiza hamos directory tuan no koko hari fila fali maneira hamoos mak ita exekuta mkdocs buil --clean iha exemplu ida ne\u2019e sei hatudu deit konaba oinsa hari ita nia situs. $ mkdocs build Sei hatudu rezultadu hanesan: $ ls 404.html css fonts index.html mkdocs.yml search.html sitemap.xml about docs img js python search site","title":"Hari situs mkdocs"},{"location":"#deploy-situs-mkdocs","text":"MKdocs ita bele host Ita nia projetu bainhira ita nia dokumentasaun iha ona repository ida nebe p\u00fabliku hanesan GitHub, Bitbucket ka GitLab, ita bele hah\u00fa uza Read Docs nian iha importasaun docs ita-nia ka deploy mkdocs Iha dokumentasaun ida nee sei hatudu deit konaba deploy ba repository iha github nia mak hanesan kria repository foun kria github repository fo naran no tuir mai ita clone mai virtualenv local. Nota: Atu deploy ho github ba dahuluk ita presiza kria file .gitignore atu nune la bele deploy hotu directory site/ ba ita nia repository. atu kria .gitignore mak hanesan: $ echo \"site/\" >> .gitignore Atu deploy ita nia dokumentasaun ita exekuta $ mkdocs gh-deploy Exekusaun kodigu ida leten iha kualker branch nebe deit maibe detallu iha master , ho mkdocs wainhira ita deploy no run mkdocs gh-deploy sei autamatika kria branch uniku ida no espesifiku ba deploy ita nia situs deit, hafoin ita deploy sei kria link ita nia account github nia exemplu https://joanico.github.io/MKdocs/ tuir mai ita bele ona asesu ita nia dokumentasaun iha kualker fatin ne\u2019e deit.","title":"Deploy situs Mkdocs"},{"location":"#rekursu-esterna","text":"Iha ne\u02bce iha rekursu estern\u00e1l balu atu ajuda ita aprende tan kona-ba MkDocs. MkDocs dokumentasaun Markdown syntax matadalan Hakerek ba imi-nia docs ho MkDocs","title":"Rekursu esterna"},{"location":"about/","text":"Bele hare referensia sira iha ne\u2019e \u00b6 Bele hare docs iha ne\u2019e Mkdocs Bele hare docs Read the docs","title":"Referensia"},{"location":"about/#bele-hare-referensia-sira-iha-nee","text":"Bele hare docs iha ne\u2019e Mkdocs Bele hare docs Read the docs","title":"Bele hare referensia sira iha ne'e"},{"location":"execute_python_syntax/","text":"Python - Sintase Bazika \u00b6 Iha ne\u2019e sei aprende sintase bazika ho python3.Lian programasaun komputer kompostu husi liafuan ne\u2019ebe defini ona no bolu liafuan-xavi (keyword), regra ida nebe preskrita kada liafuan-savi mak hanaran sintase(syntax) Python3 interprete defini ona liafuan-xavi iha 33, atu hatene kada liafuan-xavi bele hare iha lista tuir mai hahu exekuta python. ~ \u00bb python niko@Joanicos-Air Python 3.7.2 (default, Dec 5 2020, 20:22:04) [Clang 12.0.0 (clang-1200.0.32.27)] on darwin Type \"help\", \"copyright\", \"credits\" or \"license\" for more information. >>> no hakerek : >>> help(\"keywords\") Here is a list of the Python keywords. Enter any keyword to get more help. False class from or None continue global pass True def if raise and del import return as elif in try assert else is while async except lambda with await finally nonlocal yield break for not >>> Programa Python dahuluk \u00b6 Ezekuta programa sira ne\u2019ebe diferente modu programasaun. a. Modu Interativu Programasaun Modu Interativu mak command line ne\u2019eb\u00e9 f\u00f3 exekuta direta ka print imediata kada deklarasaun ne\u2019ebe la ho file script hanesan parametru ida ne\u2019ebe hatudu iha prompt tuir mai ne\u2019e: >>> print(\"Hello Timor\") Exekuta ho python verzaun 3 uza print deklarasaun ho parentes hanesan print (\u201cHello, Timor!\u201d) nia rezultadu hanesan ne\u2019e: Hello Timor b. Programasaun Modu Script (Script Mode Programming) Programasaun Modu Script mak ezukusaun programa ida nebe ita hakerek hanesan file ida no fo naran ho nia extensaun *.py, no ita bele hakerek file ne\u2019e iha ita nia text editor ka vim. Iha ezemplu ida ne\u2019e uza vim iha terminal ubuntu nian hahu ketik iha terminal ~ nano teste.py no hakerek script hanesan iha ezemplu: print (\"Hello, Timor!\") hanehan iha butaun CTRL + x no hanehan enter hodi rai ita nia file.Tuir mai exekuta file nebe ita rai hanesan iha exemplu ~ python teste.py F\u00f3-sai rezultadu hanesan tuir mai ne\u2019e: Hello, Timor! Maneira seluk atu ezekuta python script ida ita halo mudansa iha file teste.py !/usr/bin/python print (\"Hello, Timor!\") Agora koko hala\u2019o programa ida hanesan seku\u00e9nsia hirak ne\u2019e iha terminal. ~ chmod +x teste.py # Ida ne'e atu halo file exekutabel ~ ./teste.py F\u00f3-sai rezultadu hanesan tuir mai ne\u2019e: Hello, Timor! Python Identifikador (Python Identifiers) \u00b6 Python Identifikador mak naran ida ne\u2019eb\u00e9 uza hodi identifika vari\u00e1vel, funsaun, klase, module ka objetu seluk. Identifikador hah\u00fa ho letra A to\u2019o Z ka a to\u2019o z ka underscore ( _ ) tuir zero ka letra barak liu ho underscores no d\u00edjitu (0 to\u2019o ba 9). Python la autoriza karakter hanesan @, $, no % iha identifikador. Iha ne\u02bce mak f\u00f3 naran konvensaun ba Python identifikador : Klase naran hahu ho letra boot. Indentifikador sira seluk ho letra kiik. Identifikador ida hahu ho underscore uniku ne\u2019eb\u00e9 indika katak identifikador ne\u2019e privadu. Identifikador ida hahu ho underscores rua ne\u2019eb\u00e9 indika identifikador ne\u2019eb\u00e9 privadu maka\u2019as. Karik identifikador mos termina ho underscores trailing rua, identifikador ne \u2018 eb\u00e9 mak defini lian ho naran espesi\u00e1l. Lina no Identasaun (Lines and Indentation) \u00b6 Python la fornese iha braces hodi hatudu bloku sira kona-ba k\u00f3digu ba klase no definisaun funsaun ka kontrola movimentu( flow control ). Espasu kada lina iha klase ka funsaun iha espasu 4 ka kada tab ida. Pur ezemplu \u2212 class teste(): print(\"Ita nia familia\") class teste(): print(\"Ita nia familia\") def funs(): print(\"hatudu ita nia funsaun\") Kotasaun iha Python (Quotation in Python) \u00b6 Python simu de\u2019it quotes simples (\u2018), dupla (\u201c) no triplu (\u201c\u201d\u201d ka \u201c\u201d\u201c) quotes atu tuir string literals, bainhira tipu quote hah\u00fa no termina string. Triplu quotes sira uza hodi span string ba iha li\u00f1a oin-oin. Pur ezemplu hotu-hotu tuir mak leg\u00e1l. liafuan = 'Liafuan' sentence = \"Ida ne'e sentense.\" paragrafo = \"\"\"Ida mak paragrado.\"\"\u201d Kometariu iha Python (Comments in Python) \u00b6 Koment\u00e1riu iha PythonSinal Hash (#) iha python hatudu katak ida ne\u2019e atu halo ka hakerek komentariu konaba ita nia script nebe ita halo. #!/usr/bin/python # Komentariu Dahuluk print (\"Hello, Python!\") # Komentariu Daruak F\u00f3-sai rezultadu hanesan tuir mai ne\u2019e: Hello, Python! Ita bele ketik koment\u00e1riu ida iha li\u00f1a ne\u2019ebe hanesan hafoin deklarasaun ka expresaun name = \"Madisetti\" # Ida ne'e halo komentariu fila fali Ita bele halo koment\u00e1riu barak iha li\u00f1a hanesan tuir mai ne\u2019e : # Ida ne'e komentariu dahuluk. # Ida ne'e komentariu daruak. # Ida ne'e komentariu datoluk. # Kometariu remata. Sekuensia string ho triplu quotes bele uza hanesan koment\u00e1riu iha lina barak: '''Ida ne'e mak halo komentariu iha lina oin-oinka komentariu sira ne'ebe ita hakerek barak liu bele uza triplu quotes ida ne'e'''","title":"Python Sintase"},{"location":"execute_python_syntax/#python-sintase-bazika","text":"Iha ne\u2019e sei aprende sintase bazika ho python3.Lian programasaun komputer kompostu husi liafuan ne\u2019ebe defini ona no bolu liafuan-xavi (keyword), regra ida nebe preskrita kada liafuan-savi mak hanaran sintase(syntax) Python3 interprete defini ona liafuan-xavi iha 33, atu hatene kada liafuan-xavi bele hare iha lista tuir mai hahu exekuta python. ~ \u00bb python niko@Joanicos-Air Python 3.7.2 (default, Dec 5 2020, 20:22:04) [Clang 12.0.0 (clang-1200.0.32.27)] on darwin Type \"help\", \"copyright\", \"credits\" or \"license\" for more information. >>> no hakerek : >>> help(\"keywords\") Here is a list of the Python keywords. Enter any keyword to get more help. False class from or None continue global pass True def if raise and del import return as elif in try assert else is while async except lambda with await finally nonlocal yield break for not >>>","title":"Python - Sintase Bazika"},{"location":"execute_python_syntax/#programa-python-dahuluk","text":"Ezekuta programa sira ne\u2019ebe diferente modu programasaun. a. Modu Interativu Programasaun Modu Interativu mak command line ne\u2019eb\u00e9 f\u00f3 exekuta direta ka print imediata kada deklarasaun ne\u2019ebe la ho file script hanesan parametru ida ne\u2019ebe hatudu iha prompt tuir mai ne\u2019e: >>> print(\"Hello Timor\") Exekuta ho python verzaun 3 uza print deklarasaun ho parentes hanesan print (\u201cHello, Timor!\u201d) nia rezultadu hanesan ne\u2019e: Hello Timor b. Programasaun Modu Script (Script Mode Programming) Programasaun Modu Script mak ezukusaun programa ida nebe ita hakerek hanesan file ida no fo naran ho nia extensaun *.py, no ita bele hakerek file ne\u2019e iha ita nia text editor ka vim. Iha ezemplu ida ne\u2019e uza vim iha terminal ubuntu nian hahu ketik iha terminal ~ nano teste.py no hakerek script hanesan iha ezemplu: print (\"Hello, Timor!\") hanehan iha butaun CTRL + x no hanehan enter hodi rai ita nia file.Tuir mai exekuta file nebe ita rai hanesan iha exemplu ~ python teste.py F\u00f3-sai rezultadu hanesan tuir mai ne\u2019e: Hello, Timor! Maneira seluk atu ezekuta python script ida ita halo mudansa iha file teste.py !/usr/bin/python print (\"Hello, Timor!\") Agora koko hala\u2019o programa ida hanesan seku\u00e9nsia hirak ne\u2019e iha terminal. ~ chmod +x teste.py # Ida ne'e atu halo file exekutabel ~ ./teste.py F\u00f3-sai rezultadu hanesan tuir mai ne\u2019e: Hello, Timor!","title":"Programa Python dahuluk"},{"location":"execute_python_syntax/#python-identifikador-python-identifiers","text":"Python Identifikador mak naran ida ne\u2019eb\u00e9 uza hodi identifika vari\u00e1vel, funsaun, klase, module ka objetu seluk. Identifikador hah\u00fa ho letra A to\u2019o Z ka a to\u2019o z ka underscore ( _ ) tuir zero ka letra barak liu ho underscores no d\u00edjitu (0 to\u2019o ba 9). Python la autoriza karakter hanesan @, $, no % iha identifikador. Iha ne\u02bce mak f\u00f3 naran konvensaun ba Python identifikador : Klase naran hahu ho letra boot. Indentifikador sira seluk ho letra kiik. Identifikador ida hahu ho underscore uniku ne\u2019eb\u00e9 indika katak identifikador ne\u2019e privadu. Identifikador ida hahu ho underscores rua ne\u2019eb\u00e9 indika identifikador ne\u2019eb\u00e9 privadu maka\u2019as. Karik identifikador mos termina ho underscores trailing rua, identifikador ne \u2018 eb\u00e9 mak defini lian ho naran espesi\u00e1l.","title":"Python Identifikador (Python Identifiers)"},{"location":"execute_python_syntax/#lina-no-identasaun-lines-and-indentation","text":"Python la fornese iha braces hodi hatudu bloku sira kona-ba k\u00f3digu ba klase no definisaun funsaun ka kontrola movimentu( flow control ). Espasu kada lina iha klase ka funsaun iha espasu 4 ka kada tab ida. Pur ezemplu \u2212 class teste(): print(\"Ita nia familia\") class teste(): print(\"Ita nia familia\") def funs(): print(\"hatudu ita nia funsaun\")","title":"Lina no Identasaun (Lines and Indentation)"},{"location":"execute_python_syntax/#kotasaun-iha-python-quotation-in-python","text":"Python simu de\u2019it quotes simples (\u2018), dupla (\u201c) no triplu (\u201c\u201d\u201d ka \u201c\u201d\u201c) quotes atu tuir string literals, bainhira tipu quote hah\u00fa no termina string. Triplu quotes sira uza hodi span string ba iha li\u00f1a oin-oin. Pur ezemplu hotu-hotu tuir mak leg\u00e1l. liafuan = 'Liafuan' sentence = \"Ida ne'e sentense.\" paragrafo = \"\"\"Ida mak paragrado.\"\"\u201d","title":"Kotasaun iha Python (Quotation in Python)"},{"location":"execute_python_syntax/#kometariu-iha-python-comments-in-python","text":"Koment\u00e1riu iha PythonSinal Hash (#) iha python hatudu katak ida ne\u2019e atu halo ka hakerek komentariu konaba ita nia script nebe ita halo. #!/usr/bin/python # Komentariu Dahuluk print (\"Hello, Python!\") # Komentariu Daruak F\u00f3-sai rezultadu hanesan tuir mai ne\u2019e: Hello, Python! Ita bele ketik koment\u00e1riu ida iha li\u00f1a ne\u2019ebe hanesan hafoin deklarasaun ka expresaun name = \"Madisetti\" # Ida ne'e halo komentariu fila fali Ita bele halo koment\u00e1riu barak iha li\u00f1a hanesan tuir mai ne\u2019e : # Ida ne'e komentariu dahuluk. # Ida ne'e komentariu daruak. # Ida ne'e komentariu datoluk. # Kometariu remata. Sekuensia string ho triplu quotes bele uza hanesan koment\u00e1riu iha lina barak: '''Ida ne'e mak halo komentariu iha lina oin-oinka komentariu sira ne'ebe ita hakerek barak liu bele uza triplu quotes ida ne'e'''","title":"Kometariu iha Python (Comments in Python)"},{"location":"python_advanced_tutorials/","text":"Python - Advanced Tutorials \u00b6 Python - Generators \u00b6 Python - List Comprehensions \u00b6 Python - Multiple Function Arguments \u00b6 Python - Regular Expression \u00b6 Python - Exception Handling \u00b6 Python - Sets \u00b6 Python - Serialization \u00b6 Python - Partial functions \u00b6 Python - Decorators \u00b6","title":"Python Tutorial Avansadu"},{"location":"python_advanced_tutorials/#python-advanced-tutorials","text":"","title":"Python - Advanced Tutorials"},{"location":"python_advanced_tutorials/#python-generators","text":"","title":"Python - Generators"},{"location":"python_advanced_tutorials/#python-list-comprehensions","text":"","title":"Python - List Comprehensions"},{"location":"python_advanced_tutorials/#python-multiple-function-arguments","text":"","title":"Python - Multiple Function Arguments"},{"location":"python_advanced_tutorials/#python-regular-expression","text":"","title":"Python - Regular Expression"},{"location":"python_advanced_tutorials/#python-exception-handling","text":"","title":"Python - Exception Handling"},{"location":"python_advanced_tutorials/#python-sets","text":"","title":"Python - Sets"},{"location":"python_advanced_tutorials/#python-serialization","text":"","title":"Python - Serialization"},{"location":"python_advanced_tutorials/#python-partial-functions","text":"","title":"Python - Partial functions"},{"location":"python_advanced_tutorials/#python-decorators","text":"","title":"Python - Decorators"},{"location":"python_environment_setup/","text":"Python - Kria Enviroment \u00b6 Python mak disponivel ba iha variasaun bo\u2019ot hosi plataforma inklui Linux no Mac OS X. Mai hatene oinsa setup ita nia Python enviromentu. Local Setup EnviromentuLoke terminal window no hakerek \u201cpython\u201d atu hatene resultadu mak ita instala tiha ona no ne\u2019ebe versaun mak instala ona. Unix(Solaris, Linux, FreeBSD, AIX, HP/UX, SunOS, IRIX, etc) Win 9x/NT/2000 Macintosh(Intel, PPC, 68K) OS/2DOS (multiple versions) PalmOS Nokia mobile phones Windows CEAcorn/RISC OS BeOS Amiga VMS/OpenVMS QNX VxWorks Psion Python mak portado ona ba iha Java no .NET virtual machines Asesu situs Python \u00b6 Ne\u2019ebe mak aktualizadu no source code agora, binary sira, dokumentus, foun, ssl., mak disponivel ba official website hosi Python https://www.python.org/ Ite bele download dokumentus python iha https://www.python.org/doc/. Dokumentus mak disponivel iha HTML, PDF no PostScript formats. Instalasaun Python \u00b6 Distribuisaun Python mak disponivel ba iha variadade bo\u2019ot hosi plataforma. Ita presisa ba download binary code balu aplik\u00e1vel ba iha ita nia plataforma no instalasaun Python. Wainhira binary code ba ita nia plataforma ne\u2019e la disponivel, ita presisa C ba compile source code manual. Kompline source code oferese flexibilidade barak iha termus hili hosi karakter\u00edstikus ne\u2019ebe ita husu iha ita nia instalasaun. Iha ne\u2019e li\u00f1a jer\u00e1l lalais hosi instalasaun Python ba iha plataforma oi-oin. Unix no Instalasaun Linux Iha ne\u2019e mak step simples atu halo instalsaun Python iha Unix/Linux machine. Loke Web browser no ba iha https://www.python.org/downloads/ Halo tuir link download zipped source code disponivel ba Unix/Linux. Download no extract file.Edit module/setup file ne\u2019ebe mak ita hakarak ba kostume opsaun balu. Run ./configure script Make Make install Insalasaun Python ne\u2019e iha lokasaun standard /usr/local/bin no libraria sira iha /usr/local/lib/pythonXX iha ne\u2019ebe XX iha versaun Python. Instalasaun Windows Iha ne\u2019e mak step atu instala Python ba iha Windows machine. Loke Web browser no ba iha https://www.python.org/downloads/ Halo tuir link ba iha instalasaun Windows python-XYZ.msi dokumentus iha ne\u2019ebe XYZ iha versaun ita presisa halo instalasaun. Atu usa instalasaun iha ne\u2019e python-XYZ.msi, sistema Windows suporta Microsoft Installer 2.0. Rai dokumentus instalasaun ba ita nia local machine no run ida ne\u2019e atu hetan nia resultadu se nia machine suporta MSI. Run dokumentus download. Ne\u2019e lori instalasaun Python wizard, ne\u2019ebe realiza fasil atu uza. Foin aseita iha defaul settings, hein to instalsaun hotu, no ita remata. Instalasaun Macintosh Foin dadauk Macs mai ho instalasaun Python. Maibe ne\u2019e dala ruma iha tinan balu data liu tiha. Hare http://www.python.org/download/mac/ iha instrusaun ne\u2019e hetan versaun agora dok ho extra tools ba suporta desenvolve iha Mac. Iha folder Mac OS\u2019s molok Mas OS X 10.3(realiza iha 2003), MacPython mak disponilvel. Jack Jansen maintein ida ne\u2019e no ita bele asesu hotu atu hatama dokumentos ba iha nia website - http://www.cwi.nl/~jack/macpython.html. Ita bele hetan deitalu instalasaun kompletu ba instalasaun Mac OS.","title":"Python environment setup"},{"location":"python_environment_setup/#python-kria-enviroment","text":"Python mak disponivel ba iha variasaun bo\u2019ot hosi plataforma inklui Linux no Mac OS X. Mai hatene oinsa setup ita nia Python enviromentu. Local Setup EnviromentuLoke terminal window no hakerek \u201cpython\u201d atu hatene resultadu mak ita instala tiha ona no ne\u2019ebe versaun mak instala ona. Unix(Solaris, Linux, FreeBSD, AIX, HP/UX, SunOS, IRIX, etc) Win 9x/NT/2000 Macintosh(Intel, PPC, 68K) OS/2DOS (multiple versions) PalmOS Nokia mobile phones Windows CEAcorn/RISC OS BeOS Amiga VMS/OpenVMS QNX VxWorks Psion Python mak portado ona ba iha Java no .NET virtual machines","title":"Python - Kria Enviroment"},{"location":"python_environment_setup/#asesu-situs-python","text":"Ne\u2019ebe mak aktualizadu no source code agora, binary sira, dokumentus, foun, ssl., mak disponivel ba official website hosi Python https://www.python.org/ Ite bele download dokumentus python iha https://www.python.org/doc/. Dokumentus mak disponivel iha HTML, PDF no PostScript formats.","title":"Asesu situs Python"},{"location":"python_environment_setup/#instalasaun-python","text":"Distribuisaun Python mak disponivel ba iha variadade bo\u2019ot hosi plataforma. Ita presisa ba download binary code balu aplik\u00e1vel ba iha ita nia plataforma no instalasaun Python. Wainhira binary code ba ita nia plataforma ne\u2019e la disponivel, ita presisa C ba compile source code manual. Kompline source code oferese flexibilidade barak iha termus hili hosi karakter\u00edstikus ne\u2019ebe ita husu iha ita nia instalasaun. Iha ne\u2019e li\u00f1a jer\u00e1l lalais hosi instalasaun Python ba iha plataforma oi-oin. Unix no Instalasaun Linux Iha ne\u2019e mak step simples atu halo instalsaun Python iha Unix/Linux machine. Loke Web browser no ba iha https://www.python.org/downloads/ Halo tuir link download zipped source code disponivel ba Unix/Linux. Download no extract file.Edit module/setup file ne\u2019ebe mak ita hakarak ba kostume opsaun balu. Run ./configure script Make Make install Insalasaun Python ne\u2019e iha lokasaun standard /usr/local/bin no libraria sira iha /usr/local/lib/pythonXX iha ne\u2019ebe XX iha versaun Python. Instalasaun Windows Iha ne\u2019e mak step atu instala Python ba iha Windows machine. Loke Web browser no ba iha https://www.python.org/downloads/ Halo tuir link ba iha instalasaun Windows python-XYZ.msi dokumentus iha ne\u2019ebe XYZ iha versaun ita presisa halo instalasaun. Atu usa instalasaun iha ne\u2019e python-XYZ.msi, sistema Windows suporta Microsoft Installer 2.0. Rai dokumentus instalasaun ba ita nia local machine no run ida ne\u2019e atu hetan nia resultadu se nia machine suporta MSI. Run dokumentus download. Ne\u2019e lori instalasaun Python wizard, ne\u2019ebe realiza fasil atu uza. Foin aseita iha defaul settings, hein to instalsaun hotu, no ita remata. Instalasaun Macintosh Foin dadauk Macs mai ho instalasaun Python. Maibe ne\u2019e dala ruma iha tinan balu data liu tiha. Hare http://www.python.org/download/mac/ iha instrusaun ne\u2019e hetan versaun agora dok ho extra tools ba suporta desenvolve iha Mac. Iha folder Mac OS\u2019s molok Mas OS X 10.3(realiza iha 2003), MacPython mak disponilvel. Jack Jansen maintein ida ne\u2019e no ita bele asesu hotu atu hatama dokumentos ba iha nia website - http://www.cwi.nl/~jack/macpython.html. Ita bele hetan deitalu instalasaun kompletu ba instalasaun Mac OS.","title":"Instalasaun Python"},{"location":"python_notifikasaun/","text":"Uza Python hodi kalkula loron moris \u00b6 Kalkula loron moris uza python. Vizaun Jeral \u00b6 Iha topiku ida nee sei koalia konaba uza funsaun python hodi halo kalkula tinan automatika ho import file csv no dataframe hodi fo sai rezultadu. Exemplu: Fahe subsidiu bazeia ba ema nia tinan ka ita bele hatene ohin loron ema nain hira mak selebra tinan. Instrumentu \u00b6 Instrumentu nebe sei uza mak : Asegura katak ita instala ona python2 ka python3 iha ita nia laptop Install jupyter notebook ka lab Install python pandas Prosesu Exekuta \u00b6 Rejistu tinan iha excel file ho No , Municipio , Posto , Suco , Aldeia , Naran , Ke-BI , Data-Moris no save ho tipu format csv iha diretory nebe ita atu halo kalkulasaun. Loke Jupyter lab iha terminal jupyter lab Kria file jupyter ida ho naran kalkula_tinan hamutuk ho file excel nebe ita rai hanesan file csv. Flowchart 1 konaba prosesu kalkula tinan. 4.1. Import python library import pandas as pd from datetime import datetime from datetime import date \u200b 4.2. Kria data variabel ida ho tipu dictionary no hatama ba data frame d = {'No': [1, 2, 3], \"Naran\": [\"Mario\", \"Antonio\", \"Joanico\"], \"data_moris\" ['17.02.1960', '27.02.1961', '07.01.1991']} df = pd.DataFrame(data=d) \u200b 4.3. Kria funsaun konaba kalkula tinan. def kalkula_tinan(data_moris): born = datetime.strptime(data_moris, \"%d.%m.%Y\").date() today = date.today() return today.year - born.year - ((today.month, today.day) < (born.month, born.day)) 4.4. Kria funsaun ida konaba notifikasaun tinan moris nian. def notifikasaun(tinan): if tinan == 60: return \"Parabens Ohin Ita hetan ona subsidu\" elif tinan >= 60: return \"Ita hetan ona subsidu\" elif tinan <= 60: return \"Favor hein ita nia subsidu\" \u200b 4.5. Exekuta python no fo sai rezultadu df['age'] = df['data_moris'].apply(kalkula_tinan) df['mensajen'] = df['age'].apply(notifikasaun) df Rezultadu: Flowchart 2 konaba import csv file no uza panda data frame hodi kalkula tinan. 5.1 Import python library from datetime import datetime from datetime import date import pandas as pd df = pd.read_csv('naran.csv', sep=';') 5.2 Kria funsaun konaba kalkula tinan. # Kria funsaun Kalkula tinan def kalkula_tinan(data_moris): # kria tipu format tinan nian born = pd.to_datetime(data_moris, format=\"%Y-%m-%d\") today = date.today() # kalkula tinan moris ho data ohin nian return today.year - born.year - ((today.month, today.day) > (born.month, born.day)) \u200b 5.3 Kria funsaun ida konaba notifikasaun tinan moris nian. # Kria funsaun haruka konaba tinan def notifikasaun(tinan): if tinan == 60: return \"Parabens Ohin Ita hetan ona subsidu\" elif tinan >= 60: return \"Ita hetan ona subsidu\" elif tinan <= 60: return \"Favor hein ita nia subsidu\" \u200b 5.4 Exekuta rezultadu ho python # kria koluna foun ho naran tinan no aplika tinan df['tinan'] = df['Loron_Moris'].apply(kalkula_tinan) df['mensajen'] = df['tinan'].apply(notifikasaun) #print valor espesifiku. df = df.loc[df['tinan'] == 60] \u200b 5.5 Kria file csv foun husi rezultadu: #kria csv file df = df.to_csv(\"tinan.csv\", encoding='utf-8', index=False) df Rezultadu \u00b6 \u200b \u200b","title":"Python Notifikasaun"},{"location":"python_notifikasaun/#uza-python-hodi-kalkula-loron-moris","text":"Kalkula loron moris uza python.","title":"Uza Python hodi kalkula loron moris"},{"location":"python_notifikasaun/#vizaun-jeral","text":"Iha topiku ida nee sei koalia konaba uza funsaun python hodi halo kalkula tinan automatika ho import file csv no dataframe hodi fo sai rezultadu. Exemplu: Fahe subsidiu bazeia ba ema nia tinan ka ita bele hatene ohin loron ema nain hira mak selebra tinan.","title":"Vizaun Jeral"},{"location":"python_notifikasaun/#instrumentu","text":"Instrumentu nebe sei uza mak : Asegura katak ita instala ona python2 ka python3 iha ita nia laptop Install jupyter notebook ka lab Install python pandas","title":"Instrumentu"},{"location":"python_notifikasaun/#prosesu-exekuta","text":"Rejistu tinan iha excel file ho No , Municipio , Posto , Suco , Aldeia , Naran , Ke-BI , Data-Moris no save ho tipu format csv iha diretory nebe ita atu halo kalkulasaun. Loke Jupyter lab iha terminal jupyter lab Kria file jupyter ida ho naran kalkula_tinan hamutuk ho file excel nebe ita rai hanesan file csv. Flowchart 1 konaba prosesu kalkula tinan. 4.1. Import python library import pandas as pd from datetime import datetime from datetime import date \u200b 4.2. Kria data variabel ida ho tipu dictionary no hatama ba data frame d = {'No': [1, 2, 3], \"Naran\": [\"Mario\", \"Antonio\", \"Joanico\"], \"data_moris\" ['17.02.1960', '27.02.1961', '07.01.1991']} df = pd.DataFrame(data=d) \u200b 4.3. Kria funsaun konaba kalkula tinan. def kalkula_tinan(data_moris): born = datetime.strptime(data_moris, \"%d.%m.%Y\").date() today = date.today() return today.year - born.year - ((today.month, today.day) < (born.month, born.day)) 4.4. Kria funsaun ida konaba notifikasaun tinan moris nian. def notifikasaun(tinan): if tinan == 60: return \"Parabens Ohin Ita hetan ona subsidu\" elif tinan >= 60: return \"Ita hetan ona subsidu\" elif tinan <= 60: return \"Favor hein ita nia subsidu\" \u200b 4.5. Exekuta python no fo sai rezultadu df['age'] = df['data_moris'].apply(kalkula_tinan) df['mensajen'] = df['age'].apply(notifikasaun) df Rezultadu: Flowchart 2 konaba import csv file no uza panda data frame hodi kalkula tinan. 5.1 Import python library from datetime import datetime from datetime import date import pandas as pd df = pd.read_csv('naran.csv', sep=';') 5.2 Kria funsaun konaba kalkula tinan. # Kria funsaun Kalkula tinan def kalkula_tinan(data_moris): # kria tipu format tinan nian born = pd.to_datetime(data_moris, format=\"%Y-%m-%d\") today = date.today() # kalkula tinan moris ho data ohin nian return today.year - born.year - ((today.month, today.day) > (born.month, born.day)) \u200b 5.3 Kria funsaun ida konaba notifikasaun tinan moris nian. # Kria funsaun haruka konaba tinan def notifikasaun(tinan): if tinan == 60: return \"Parabens Ohin Ita hetan ona subsidu\" elif tinan >= 60: return \"Ita hetan ona subsidu\" elif tinan <= 60: return \"Favor hein ita nia subsidu\" \u200b 5.4 Exekuta rezultadu ho python # kria koluna foun ho naran tinan no aplika tinan df['tinan'] = df['Loron_Moris'].apply(kalkula_tinan) df['mensajen'] = df['tinan'].apply(notifikasaun) #print valor espesifiku. df = df.loc[df['tinan'] == 60] \u200b 5.5 Kria file csv foun husi rezultadu: #kria csv file df = df.to_csv(\"tinan.csv\", encoding='utf-8', index=False) df","title":"Prosesu Exekuta"},{"location":"python_notifikasaun/#rezultadu","text":"\u200b \u200b","title":"Rezultadu"},{"location":"python_other_tutorials/","text":"Python - Other Python Tutorials \u00b6 Python - Database Access \u00b6 Python - Network Programming \u00b6 Python - GUI Programming \u00b6 Python - Web development \u00b6 Python - Framework \u00b6 Botle Flask Django","title":"Python Tutorial Seluk"},{"location":"python_other_tutorials/#python-other-python-tutorials","text":"","title":"Python - Other Python Tutorials"},{"location":"python_other_tutorials/#python-database-access","text":"","title":"Python - Database Access"},{"location":"python_other_tutorials/#python-network-programming","text":"","title":"Python - Network Programming"},{"location":"python_other_tutorials/#python-gui-programming","text":"","title":"Python - GUI Programming"},{"location":"python_other_tutorials/#python-web-development","text":"","title":"Python - Web development"},{"location":"python_other_tutorials/#python-framework","text":"Botle Flask Django","title":"Python - Framework"},{"location":"python_overview/","text":"Saida mak Python? \u00b6 Python mak lingua programasaun ida nebe kria husi Guido van Rossum no publika iha tinan 1991. Python bele uza ba: Web development (server-side), Software development, Matematika, System scripting Saida mak python bele halo? \u00b6 Python bele uza iha server hodi kria aplikasaun web. Python bele hamutuk ho software modi kria workflows. Python bele konekta ba sistema basedadus. ida ne\u2019e bele lee no modifika dokumentu sira. python bele trata ho dadus nebe boot no performa matematika complexu. Python bele uza hodi halo prototipu nebe lais ka bele dezenvole software nebe prontu hodi uza. Tanba sa iha Python? \u00b6 Python servisu ho diferente plataforma sira hanesan(Windows, Mac, Linux, Raspberry Pi, etc). Python iha sintase nebe simples hanesan ho lingua Ingles. Python iha sintase nebe bele permiti hodi dezenvolve kria programa ho lina kiik kompara ho liangua programasaun balu. Python bele trata forma ho procedimental, object-oriental, ka forma funsional. Saida presiza hatene husi Python maka: Verzaun python agora iha python 2 no python 3, python2 nia wainhira install ba sistema operasaun linux nia iha ona pakote python ho verzaun 2 python verzaun 2 popular maibe iha limitasaun ba sitase balu no la atualizadu. Python3 ne\u2019e atualizadu no iha feature foun husi python. Iha totorial ida ne\u2019e python bele hakerek iha textu editor, python iha posibilidade bele hakerek integradu dezevolve iha enviromentuI ( IDE ), Pycharn, Netbeans no Jupyter notebook. Kompara python syntax ho lingua programasaun sira seluk \u00b6 Python dezenu ba abilidade hodi lee hanesan ho linagua English nebe influensia husi Matematika. Python uza lina foun kompleta hanesan command, kontrariu ho lingua programasaun seluk dala barak uza semicolons ka parente( ; ka () ). Python depende ba indentation uza espasu mamuk hodi scope ka hafahe hanesan loops, functions no classes. Linguan programasaun seluk dala barak uza curly-brackets hanesan objectivu Exemplu \u00b6 print(\"Hello, World!\")","title":"Python Introdusaun"},{"location":"python_overview/#saida-mak-python","text":"Python mak lingua programasaun ida nebe kria husi Guido van Rossum no publika iha tinan 1991. Python bele uza ba: Web development (server-side), Software development, Matematika, System scripting","title":"Saida mak Python?"},{"location":"python_overview/#saida-mak-python-bele-halo","text":"Python bele uza iha server hodi kria aplikasaun web. Python bele hamutuk ho software modi kria workflows. Python bele konekta ba sistema basedadus. ida ne\u2019e bele lee no modifika dokumentu sira. python bele trata ho dadus nebe boot no performa matematika complexu. Python bele uza hodi halo prototipu nebe lais ka bele dezenvole software nebe prontu hodi uza.","title":"Saida mak python bele halo?"},{"location":"python_overview/#tanba-sa-iha-python","text":"Python servisu ho diferente plataforma sira hanesan(Windows, Mac, Linux, Raspberry Pi, etc). Python iha sintase nebe simples hanesan ho lingua Ingles. Python iha sintase nebe bele permiti hodi dezenvolve kria programa ho lina kiik kompara ho liangua programasaun balu. Python bele trata forma ho procedimental, object-oriental, ka forma funsional. Saida presiza hatene husi Python maka: Verzaun python agora iha python 2 no python 3, python2 nia wainhira install ba sistema operasaun linux nia iha ona pakote python ho verzaun 2 python verzaun 2 popular maibe iha limitasaun ba sitase balu no la atualizadu. Python3 ne\u2019e atualizadu no iha feature foun husi python. Iha totorial ida ne\u2019e python bele hakerek iha textu editor, python iha posibilidade bele hakerek integradu dezevolve iha enviromentuI ( IDE ), Pycharn, Netbeans no Jupyter notebook.","title":"Tanba sa iha Python?"},{"location":"python_overview/#kompara-python-syntax-ho-lingua-programasaun-sira-seluk","text":"Python dezenu ba abilidade hodi lee hanesan ho linagua English nebe influensia husi Matematika. Python uza lina foun kompleta hanesan command, kontrariu ho lingua programasaun seluk dala barak uza semicolons ka parente( ; ka () ). Python depende ba indentation uza espasu mamuk hodi scope ka hafahe hanesan loops, functions no classes. Linguan programasaun seluk dala barak uza curly-brackets hanesan objectivu","title":"Kompara python syntax ho lingua programasaun sira seluk"},{"location":"python_overview/#exemplu","text":"print(\"Hello, World!\")","title":"Exemplu"},{"location":"python_tutorial/","text":"Python Tutorial in Tetun \u00b6 Table of Contents \u00b6 Python Basics Tutorial \u00b6 Python - Home Python - Overview Python - Environment Setup Python - Basic Syntax Python - Variables and Types Python - Python Numbers Python - Strings Python - Lists Python - Tuples Python - Dictionar Python - Data Type Conversion Python - Basic Operators Python - String Formatting Python - Basic String Operations Python - Conditions Python - Loops Python - Functions Python - Classes and Objects Python - Dictionaries Python - Modules and Packages Python - Data Science Tutorials Python - Numpy Arrays Python - Pandas Basics Python - Advanced Tutorials \u00b6 Python - Generators Python - List Comprehensions Python - Multiple Function Arguments Python - Regular Expression Python - Exception Handling Python - Sets Python - Serialization Python - Partial functions Python - Decorators Python - Other Python Tutorials \u00b6 Python - Database Access Python - Network Programming Python - GUI Programming Python - Web development Python - Framework 1. Botle 2. Flask 3. Django","title":"Python Tutorial"},{"location":"python_tutorial/#python-tutorial-in-tetun","text":"","title":"Python Tutorial in Tetun"},{"location":"python_tutorial/#table-of-contents","text":"","title":"Table of Contents"},{"location":"python_tutorial/#python-basics-tutorial","text":"Python - Home Python - Overview Python - Environment Setup Python - Basic Syntax Python - Variables and Types Python - Python Numbers Python - Strings Python - Lists Python - Tuples Python - Dictionar Python - Data Type Conversion Python - Basic Operators Python - String Formatting Python - Basic String Operations Python - Conditions Python - Loops Python - Functions Python - Classes and Objects Python - Dictionaries Python - Modules and Packages Python - Data Science Tutorials Python - Numpy Arrays Python - Pandas Basics","title":"Python Basics Tutorial"},{"location":"python_tutorial/#python-advanced-tutorials","text":"Python - Generators Python - List Comprehensions Python - Multiple Function Arguments Python - Regular Expression Python - Exception Handling Python - Sets Python - Serialization Python - Partial functions Python - Decorators","title":"Python - Advanced Tutorials"},{"location":"python_tutorial/#python-other-python-tutorials","text":"Python - Database Access Python - Network Programming Python - GUI Programming Python - Web development Python - Framework 1. Botle 2. Flask 3. Django","title":"Python - Other Python Tutorials"},{"location":"python_variables/","text":"Python - Variabel \u00b6 Variabel mak fatin memoria rezerva hodi rai valor sira. Signifika katak bainhira ita kria variabel ida ita rezerva hela fatin mamu iha memoria no tipu data ba variabel, bele rai interger decimal ka karakteristika iha variabel sira. Deklara variabel \u00b6 Python deklara variabel la partikularmente ho tipu data python waihira ita deklara ka kria variabel ida ita assign valor ba variabel simbolikamente hare husi operador (=). Por exemplu: a = 1 Object referencia \u00b6 Python object oriented ne\u2019e integradu ona wainhira ita print diretamente no ita bele print data ho tipu oin-oin. Ezemplu: >>> print(\"Mario\") Mario no ketik: >>> type(\"Mario\") <class 'str'> Naran Variabel \u00b6 Python naran variabel bele refere ba kualker naran husi variabel bele hakerek ho letra maiskula ka minuskula no bele hakerek digital husi 0 to\u2019o 9 no uza simbolu sira hanesan underscore(__) >>> naran = \"Mario\" >>> tinan = 30 >>> altura = 168 Print naran variabel : >>> print(naran) >>> print(tinan) >>> print(altura) Fo sai rezultadu: Mario 30 168 Fo variabel naran la hanesan : naran = \"A\" Naran = \"B\" naRan = \"C\" NARAN = \"D\" n_a_r_a_n = \"E\" _naran = \"F\" naran_ = \"G\" _naran_ = \"H\" na56ra3 = \"I\" Print : print(naran, Naran, naRan, NARAN, n_a_r_a_n, _naran, naran_, _naran_, na56ra3) Multi Assignment \u00b6 Iha python ita bele kria variabel barak no refere ba valor ida deit ka ita bele kria valor ida bele assign ba multi variabel ka variabel oin-oin Exemplu: >>> naran = \"Mario\" >>> tinan = 30 >>> altura = 168 Print naran variabel: >>> print(naran) >>> print(tinan) >>> print(altura) Fo sai resultadu: Mario 30 168 Tipu Variabel \u00b6 Tipu python variabel iha rua local variabel no global variabel. Local Variabel Local variabel mak defini iha funsaun nia laran no iha scope funsaun nia laran. Exemplu: # Deklara funsaun def func(): # defini lokal variabel a = 20 print(\"Variabel a mak\", a) # bolu funsaun func() Fo sai rezultadu Variabel a mak 20 Global Variabel Global Variabel bele uza jeral ka laos iha funsaun nia laran no bele uza mos iha funsaun nia laran. Python global variabel ita bele defini iha funsaun nia laran uza global keyword. Exemplu: a = 20 # Deklara funsaun def func(): # defini lokal variabel print(\"global a mak\", a) # bolu funsaun func() Fo sai rezultadu global a mak 20 Exemplu global variabel seluk: # Deklara funsaun def func(): global a a = 20 # defini lokal variabel print(\"global a mak\", a) # bolu funsaun func() Fo sai rezultadu global a mak 20 Exemplu konaba deklara global no local variabel iha funsaun nia laran: # Deklara funsaun def func(): global a a = 20 h = 2 # defini lokal variabel print(\"global\", a, \"no local\", h) func() #bolu funsaun print(h) Iha kazu seluk koko print variabel h maibe mosu error tanba ita bolu variabel iha scope nia laran maibe ita print sai husi scope ka out of scope. global 20 no local 2 --------------------------------------------------------------------------- NameError Traceback (most recent call last) <ipython-input-81-fc300bf1c91f> in <module> 9 # bolu funsaun 10 func() ---> 11 print(h) NameError: name 'h' is not defined Python - Tipu Data \u00b6 my_var = 2 my_var mak identifika ona naran husi variabel no valor mak 2 Valor nebe ita fo iha variabel ne\u2019e bele troka ba valor seluk. Atu asesu ba variabel importante ita hatene fo variabel nia naran. >>> my_var=\"Antonio\" >>> print(my_var) 'Antonio' Tipu data husi variabel nebe ita kria no fo nia valor bele identifika hanesan tuir mai ne\u2019e bele integer, string ka float no boolean. String >>> a = \"Jose\" >>> print(a) 'Jose' >>> type(a) <class 'str'> Integer >>> b = 20 >>> print(b) 20 >>> type(b) <class 'int'> Float >>> c = 2.0 >>> print(c) 2.0 >>> type(c) <class 'float'> Boolean >>> e = True >>> print(e) True >>> type(e) <class 'bool' >>> e = False >>> print(e) False >>> type(e) <class 'bool'>","title":"Python Variabel"},{"location":"python_variables/#python-variabel","text":"Variabel mak fatin memoria rezerva hodi rai valor sira. Signifika katak bainhira ita kria variabel ida ita rezerva hela fatin mamu iha memoria no tipu data ba variabel, bele rai interger decimal ka karakteristika iha variabel sira.","title":"Python - Variabel"},{"location":"python_variables/#deklara-variabel","text":"Python deklara variabel la partikularmente ho tipu data python waihira ita deklara ka kria variabel ida ita assign valor ba variabel simbolikamente hare husi operador (=). Por exemplu: a = 1","title":"Deklara variabel"},{"location":"python_variables/#object-referencia","text":"Python object oriented ne\u2019e integradu ona wainhira ita print diretamente no ita bele print data ho tipu oin-oin. Ezemplu: >>> print(\"Mario\") Mario no ketik: >>> type(\"Mario\") <class 'str'>","title":"Object referencia"},{"location":"python_variables/#naran-variabel","text":"Python naran variabel bele refere ba kualker naran husi variabel bele hakerek ho letra maiskula ka minuskula no bele hakerek digital husi 0 to\u2019o 9 no uza simbolu sira hanesan underscore(__) >>> naran = \"Mario\" >>> tinan = 30 >>> altura = 168 Print naran variabel : >>> print(naran) >>> print(tinan) >>> print(altura) Fo sai rezultadu: Mario 30 168 Fo variabel naran la hanesan : naran = \"A\" Naran = \"B\" naRan = \"C\" NARAN = \"D\" n_a_r_a_n = \"E\" _naran = \"F\" naran_ = \"G\" _naran_ = \"H\" na56ra3 = \"I\" Print : print(naran, Naran, naRan, NARAN, n_a_r_a_n, _naran, naran_, _naran_, na56ra3)","title":"Naran Variabel"},{"location":"python_variables/#multi-assignment","text":"Iha python ita bele kria variabel barak no refere ba valor ida deit ka ita bele kria valor ida bele assign ba multi variabel ka variabel oin-oin Exemplu: >>> naran = \"Mario\" >>> tinan = 30 >>> altura = 168 Print naran variabel: >>> print(naran) >>> print(tinan) >>> print(altura) Fo sai resultadu: Mario 30 168","title":"Multi Assignment"},{"location":"python_variables/#tipu-variabel","text":"Tipu python variabel iha rua local variabel no global variabel. Local Variabel Local variabel mak defini iha funsaun nia laran no iha scope funsaun nia laran. Exemplu: # Deklara funsaun def func(): # defini lokal variabel a = 20 print(\"Variabel a mak\", a) # bolu funsaun func() Fo sai rezultadu Variabel a mak 20 Global Variabel Global Variabel bele uza jeral ka laos iha funsaun nia laran no bele uza mos iha funsaun nia laran. Python global variabel ita bele defini iha funsaun nia laran uza global keyword. Exemplu: a = 20 # Deklara funsaun def func(): # defini lokal variabel print(\"global a mak\", a) # bolu funsaun func() Fo sai rezultadu global a mak 20 Exemplu global variabel seluk: # Deklara funsaun def func(): global a a = 20 # defini lokal variabel print(\"global a mak\", a) # bolu funsaun func() Fo sai rezultadu global a mak 20 Exemplu konaba deklara global no local variabel iha funsaun nia laran: # Deklara funsaun def func(): global a a = 20 h = 2 # defini lokal variabel print(\"global\", a, \"no local\", h) func() #bolu funsaun print(h) Iha kazu seluk koko print variabel h maibe mosu error tanba ita bolu variabel iha scope nia laran maibe ita print sai husi scope ka out of scope. global 20 no local 2 --------------------------------------------------------------------------- NameError Traceback (most recent call last) <ipython-input-81-fc300bf1c91f> in <module> 9 # bolu funsaun 10 func() ---> 11 print(h) NameError: name 'h' is not defined","title":"Tipu Variabel"},{"location":"python_variables/#python-tipu-data","text":"my_var = 2 my_var mak identifika ona naran husi variabel no valor mak 2 Valor nebe ita fo iha variabel ne\u2019e bele troka ba valor seluk. Atu asesu ba variabel importante ita hatene fo variabel nia naran. >>> my_var=\"Antonio\" >>> print(my_var) 'Antonio' Tipu data husi variabel nebe ita kria no fo nia valor bele identifika hanesan tuir mai ne\u2019e bele integer, string ka float no boolean. String >>> a = \"Jose\" >>> print(a) 'Jose' >>> type(a) <class 'str'> Integer >>> b = 20 >>> print(b) 20 >>> type(b) <class 'int'> Float >>> c = 2.0 >>> print(c) 2.0 >>> type(c) <class 'float'> Boolean >>> e = True >>> print(e) True >>> type(e) <class 'bool' >>> e = False >>> print(e) False >>> type(e) <class 'bool'>","title":"Python - Tipu Data"}]}