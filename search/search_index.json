{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Benvindu mai vizita tutorial programasaun Python \u00b6 Saida mak Python? \u00b6 Python mak lingua programasaun ida ne\u2019ebe kria husi Guido van Rossum no publika iha tinan 1991. Python bele uza ba: Web development (server-side), Software development, Matematika, System scripting Saida mak python bele halo? \u00b6 Python bele uza iha server hodi kria aplikasaun web. Python bele hamutuk ho software modi kria workflows. Python bele konekta ba sistema basedadus. ida ne\u2019e bele lee no modifika dokumentu sira. python bele trata ho dadus ne\u2019eb\u00e9 boot no performa matem\u00e1tika complexu. Python bele uza hodi halo prot\u00f3tipu ne\u2019eb\u00e9 lais ka bele dezenvolve software ne\u2019eb\u00e9 prontu hodi uza. Tanba sa iha Python? \u00b6 Python servisu ho diferente plataforma sira hanesan(Windows, Mac, Linux, Raspberry Pi, etc). Python iha sintase ne\u2019eb\u00e9 simples hanesan ho l\u00edngua Ingles. Python iha sintase ne\u2019eb\u00e9 bele permite hodi dezenvolve kria programa ho li\u00f1a ki\u2019ik kompara ho l\u00edngua programasaun balu. Python bele trata forma ho prosedimentu, object-oriental, ka forma funsiona. Saida presiza hatene husi Python maka: Versaun python agora iha python 2 no python 3, python2 nia bainhira instala ba sistema operasaun linux nia iha ona pakote python ho versaun 2 python versaun 2 popul\u00e1r maib\u00e9 iha limitasaun ba sintase balu no la atualiza. Python3 ne\u2019e atualiza no iha feature foun husi python. Iha tutorial ida ne\u2019e python bele hakerek iha testu edit\u00f3r, python iha posibilidade bele hakerek integradu dezevolve iha enviromentu ( IDE ), Pycharn, Netbeans no Jupyter notebook. Kompara python syntax ho lingua programasaun sira seluk \u00b6 Python deze\u00f1u ba abilidade hodi lee hanesan ho l\u00edngua English ne\u2019eb\u00e9 influ\u00e9nsia husi Matematika. Python uza li\u00f1a foun kompleta hanesan command, kontr\u00e1riu ho l\u00edngua programasaun seluk dala barak uza semicolons ka parente( ; ka () ). Python depende ba indentation uza espasu mamuk hodi scope ka hafahe hanesan loops, functions no classes. L\u00edngua programasaun seluk dala barak uza curly-brackets hanesan objetivu Exemplu \u00b6 print(\"Hello, World!\")","title":"Benvindu mai vizita tutorial programasaun Python"},{"location":"#benvindu-mai-vizita-tutorial-programasaun-python","text":"","title":"Benvindu mai vizita tutorial programasaun Python"},{"location":"#saida-mak-python","text":"Python mak lingua programasaun ida ne\u2019ebe kria husi Guido van Rossum no publika iha tinan 1991. Python bele uza ba: Web development (server-side), Software development, Matematika, System scripting","title":"Saida mak Python?"},{"location":"#saida-mak-python-bele-halo","text":"Python bele uza iha server hodi kria aplikasaun web. Python bele hamutuk ho software modi kria workflows. Python bele konekta ba sistema basedadus. ida ne\u2019e bele lee no modifika dokumentu sira. python bele trata ho dadus ne\u2019eb\u00e9 boot no performa matem\u00e1tika complexu. Python bele uza hodi halo prot\u00f3tipu ne\u2019eb\u00e9 lais ka bele dezenvolve software ne\u2019eb\u00e9 prontu hodi uza.","title":"Saida mak python bele halo?"},{"location":"#tanba-sa-iha-python","text":"Python servisu ho diferente plataforma sira hanesan(Windows, Mac, Linux, Raspberry Pi, etc). Python iha sintase ne\u2019eb\u00e9 simples hanesan ho l\u00edngua Ingles. Python iha sintase ne\u2019eb\u00e9 bele permite hodi dezenvolve kria programa ho li\u00f1a ki\u2019ik kompara ho l\u00edngua programasaun balu. Python bele trata forma ho prosedimentu, object-oriental, ka forma funsiona. Saida presiza hatene husi Python maka: Versaun python agora iha python 2 no python 3, python2 nia bainhira instala ba sistema operasaun linux nia iha ona pakote python ho versaun 2 python versaun 2 popul\u00e1r maib\u00e9 iha limitasaun ba sintase balu no la atualiza. Python3 ne\u2019e atualiza no iha feature foun husi python. Iha tutorial ida ne\u2019e python bele hakerek iha testu edit\u00f3r, python iha posibilidade bele hakerek integradu dezevolve iha enviromentu ( IDE ), Pycharn, Netbeans no Jupyter notebook.","title":"Tanba sa iha Python?"},{"location":"#kompara-python-syntax-ho-lingua-programasaun-sira-seluk","text":"Python deze\u00f1u ba abilidade hodi lee hanesan ho l\u00edngua English ne\u2019eb\u00e9 influ\u00e9nsia husi Matematika. Python uza li\u00f1a foun kompleta hanesan command, kontr\u00e1riu ho l\u00edngua programasaun seluk dala barak uza semicolons ka parente( ; ka () ). Python depende ba indentation uza espasu mamuk hodi scope ka hafahe hanesan loops, functions no classes. L\u00edngua programasaun seluk dala barak uza curly-brackets hanesan objetivu","title":"Kompara python syntax ho lingua programasaun sira seluk"},{"location":"#exemplu","text":"print(\"Hello, World!\")","title":"Exemplu"},{"location":"about/","text":"Bele hare referensia sira iha ne\u2019e \u00b6 Bele hare docs iha ne\u2019e Mkdocs Bele hare docs Read the docs","title":"Referensia"},{"location":"about/#bele-hare-referensia-sira-iha-nee","text":"Bele hare docs iha ne\u2019e Mkdocs Bele hare docs Read the docs","title":"Bele hare referensia sira iha ne'e"},{"location":"execute_python_syntax/","text":"Python - Sintase Bazika \u00b6 Iha ne\u2019e sei aprende sintase b\u00e1zika ho python3. Lian programasaun kompostu husi liafuan ne\u2019eb\u00e9 define ona no bolu liafuan xave (keyword), regra ida ne\u2019eb\u00e9 preskrita kada liafuan xave mak hanaran sintase(syntax) Python3 int\u00e9rprete define ona liafuan xave iha 33, atu hatene kada liafuan xave bele hare iha lista tuir mai hah\u00fa ezekuta python. ~ \u00bb python niko@Joanicos-Air Python 3.7.2 (default, Dec 5 2020, 20:22:04) [Clang 12.0.0 (clang-1200.0.32.27)] on darwin Type \"help\", \"copyright\", \"credits\" or \"license\" for more information. >>> no hakerek : >>> help(\"keywords\") Here is a list of the Python keywords. Enter any keyword to get more help. False class from or None continue global pass True def if raise and del import return as elif in try assert else is while async except lambda with await finally nonlocal yield break for not >>> Programa Python dahuluk \u00b6 Ezekuta programa sira ne\u2019eb\u00e9 diferente modu programasaun. a. Modu Interativu Programasaun Modu Interativu mak command line ne\u2019eb\u00e9 f\u00f3 ezekuta direta ka print imediata kada deklarasaun ne\u2019eb\u00e9 la ho fil\u00e9 skript hanesan par\u00e1metru ida ne\u2019eb\u00e9 hatudu iha prompt tuir mai ne\u2019e: >>> print(\"Hello Timor\") Ezekuta ho python versaun 3 uza print deklarasaun ho parentes hanesan print (\u201cHello, Timor!\u201d) nia rezultadu hanesan ne\u2019e: Hello Timor b. Programasaun Modu Skript (Script Mode Programming) Programasaun Modu Script mak ezekusaun programa ida ne\u2019eb\u00e9 ita hakerek hanesan fil\u00e9 ida no f\u00f3 naran ho nia estensaun *.py, no ita bele hakerek fil\u00e9 ne\u2019e iha ita-nia testu edit\u00f3r ka vim. Iha ezemplu ida ne\u2019e uza vim iha termin\u00e1l ubuntu nian hah\u00fa ket\u00edk iha termin\u00e1l ~ nano teste.py no hakerek skript hanesan iha ezemplu: print (\"Hello, Timor!\") hanehan iha butaun CTRL + x no hanehan enter hodi rai ita-nia fil\u00e9.Tuir mai ezekuta fil\u00e9 ne\u2019eb\u00e9 ita rai hanesan iha ezemplu ~ python teste.py F\u00f3-sai rezultadu hanesan tuir mai ne\u2019e: Hello, Timor! Maneira seluk atu ezekuta python skript ida ita halo mudansa iha fil\u00e9 teste.py !/usr/bin/python print (\"Hello, Timor!\") Agora koko hala\u2019o programa ida hanesan seku\u00e9nsia hirak ne\u2019e iha terminal. ~ chmod +x teste.py # Ida ne'e atu halo file exekutabel ~ ./teste.py F\u00f3-sai rezultadu hanesan tuir mai ne\u2019e: Hello, Timor! Python Identifikador (Python Identifiers) \u00b6 Python Identifikador mak naran ida ne\u2019eb\u00e9 uza hodi identifika variavel, funsaun, klase, m\u00f3dulu ka objetu seluk. Identifikador hah\u00fa ho letra A to\u2019o Z ka a to\u2019o z ka underscore ( _ ) tuir zero ka letra barak liu ho underscores no d\u00edjitu (0 to\u2019o ba 9). Python la autoriza karakter hanesan @, $, no % iha identifikador. Iha ne\u2019e mak f\u00f3 naran konvensaun ba Python identifikador : Klase naran hah\u00fa ho letra boot. Indentifikador sira seluk ho letra ki\u2019ik. Identifikador ida hah\u00fa ho underscore \u00faniku ne\u2019eb\u00e9 indika katak identifikador ne\u2019e privadu. Identifikador ida hah\u00fa ho underscores rua ne\u2019eb\u00e9 indika identifikador ne\u2019eb\u00e9 privadu maka\u2019as. Karik identifikador m\u00f3s termina ho underscores trailing rua, identifikador ne\u2019eb\u00e9 mak define lian ho naran espesi\u00e1l. Li\u00f1a no Identasaun (Lines and Indentation) \u00b6 Python la fornese iha braces hodi hatudu bloku sira kona-ba k\u00f3digu ba klase no definisaun funsaun ka kontrola movimentu( flow control ). Espasu kada li\u00f1a iha klase ka funsaun iha espasu 4 ka kada tab ida. Pur ezemplu \u2212 class teste(): print(\"Ita nia familia\") class teste(): print(\"Ita nia familia\") def funs(): print(\"hatudu ita nia funsaun\") Kotasaun iha Python (Quotation in Python) \u00b6 Python simu de\u2019it quotes simples (\u2018), dupla (\u201c) no triplu (\u201c\u201d\u201d ka \u201c\u201d\u201c) quotes atu tuir string literals, bainhira tipu quote hah\u00fa no termina string. Triplu quotes sira uza hodi span string ba iha li\u00f1a oin-oin. Pur ezemplu hotu-hotu tuir mak leg\u00e1l. liafuan = 'Liafuan' sentence = \"Ida ne'e sentense.\" paragrafo = \"\"\"Ida mak paragrado.\"\"\u201d Kometariu iha Python (Comments in Python) \u00b6 Koment\u00e1riu iha Python Sinal Hash (#) iha python hatudu katak ida ne\u2019e atu halo ka hakerek koment\u00e1riu kona-ba ita-nia skript ne\u2019eb\u00e9 ita halo. #!/usr/bin/python # Komentariu Dahuluk print (\"Hello, Python!\") # Komentariu Daruak F\u00f3-sai rezultadu hanesan tuir mai ne\u2019e: Hello, Python! Ita bele ket\u00edk koment\u00e1riu ida iha li\u00f1a ne\u2019eb\u00e9 hanesan hafoin deklarasaun ka espresaun name = \"Madisetti\" # Ida ne'e halo komentariu fila fali Ita bele halo koment\u00e1riu barak iha li\u00f1a hanesan tuir mai ne\u2019e : # Ida ne'e komentariu dahuluk. # Ida ne'e komentariu daruak. # Ida ne'e komentariu datoluk. # Kometariu remata. Sekuensia string ho triplu quotes bele uza hanesan koment\u00e1riu iha lina barak: '''Ida ne'e mak halo komentariu iha lina oin-oinka komentariu sira ne'ebe ita hakerek barak liu bele uza triplu quotes ida ne'e'''","title":"Python Sintase"},{"location":"execute_python_syntax/#python-sintase-bazika","text":"Iha ne\u2019e sei aprende sintase b\u00e1zika ho python3. Lian programasaun kompostu husi liafuan ne\u2019eb\u00e9 define ona no bolu liafuan xave (keyword), regra ida ne\u2019eb\u00e9 preskrita kada liafuan xave mak hanaran sintase(syntax) Python3 int\u00e9rprete define ona liafuan xave iha 33, atu hatene kada liafuan xave bele hare iha lista tuir mai hah\u00fa ezekuta python. ~ \u00bb python niko@Joanicos-Air Python 3.7.2 (default, Dec 5 2020, 20:22:04) [Clang 12.0.0 (clang-1200.0.32.27)] on darwin Type \"help\", \"copyright\", \"credits\" or \"license\" for more information. >>> no hakerek : >>> help(\"keywords\") Here is a list of the Python keywords. Enter any keyword to get more help. False class from or None continue global pass True def if raise and del import return as elif in try assert else is while async except lambda with await finally nonlocal yield break for not >>>","title":"Python - Sintase Bazika"},{"location":"execute_python_syntax/#programa-python-dahuluk","text":"Ezekuta programa sira ne\u2019eb\u00e9 diferente modu programasaun. a. Modu Interativu Programasaun Modu Interativu mak command line ne\u2019eb\u00e9 f\u00f3 ezekuta direta ka print imediata kada deklarasaun ne\u2019eb\u00e9 la ho fil\u00e9 skript hanesan par\u00e1metru ida ne\u2019eb\u00e9 hatudu iha prompt tuir mai ne\u2019e: >>> print(\"Hello Timor\") Ezekuta ho python versaun 3 uza print deklarasaun ho parentes hanesan print (\u201cHello, Timor!\u201d) nia rezultadu hanesan ne\u2019e: Hello Timor b. Programasaun Modu Skript (Script Mode Programming) Programasaun Modu Script mak ezekusaun programa ida ne\u2019eb\u00e9 ita hakerek hanesan fil\u00e9 ida no f\u00f3 naran ho nia estensaun *.py, no ita bele hakerek fil\u00e9 ne\u2019e iha ita-nia testu edit\u00f3r ka vim. Iha ezemplu ida ne\u2019e uza vim iha termin\u00e1l ubuntu nian hah\u00fa ket\u00edk iha termin\u00e1l ~ nano teste.py no hakerek skript hanesan iha ezemplu: print (\"Hello, Timor!\") hanehan iha butaun CTRL + x no hanehan enter hodi rai ita-nia fil\u00e9.Tuir mai ezekuta fil\u00e9 ne\u2019eb\u00e9 ita rai hanesan iha ezemplu ~ python teste.py F\u00f3-sai rezultadu hanesan tuir mai ne\u2019e: Hello, Timor! Maneira seluk atu ezekuta python skript ida ita halo mudansa iha fil\u00e9 teste.py !/usr/bin/python print (\"Hello, Timor!\") Agora koko hala\u2019o programa ida hanesan seku\u00e9nsia hirak ne\u2019e iha terminal. ~ chmod +x teste.py # Ida ne'e atu halo file exekutabel ~ ./teste.py F\u00f3-sai rezultadu hanesan tuir mai ne\u2019e: Hello, Timor!","title":"Programa Python dahuluk"},{"location":"execute_python_syntax/#python-identifikador-python-identifiers","text":"Python Identifikador mak naran ida ne\u2019eb\u00e9 uza hodi identifika variavel, funsaun, klase, m\u00f3dulu ka objetu seluk. Identifikador hah\u00fa ho letra A to\u2019o Z ka a to\u2019o z ka underscore ( _ ) tuir zero ka letra barak liu ho underscores no d\u00edjitu (0 to\u2019o ba 9). Python la autoriza karakter hanesan @, $, no % iha identifikador. Iha ne\u2019e mak f\u00f3 naran konvensaun ba Python identifikador : Klase naran hah\u00fa ho letra boot. Indentifikador sira seluk ho letra ki\u2019ik. Identifikador ida hah\u00fa ho underscore \u00faniku ne\u2019eb\u00e9 indika katak identifikador ne\u2019e privadu. Identifikador ida hah\u00fa ho underscores rua ne\u2019eb\u00e9 indika identifikador ne\u2019eb\u00e9 privadu maka\u2019as. Karik identifikador m\u00f3s termina ho underscores trailing rua, identifikador ne\u2019eb\u00e9 mak define lian ho naran espesi\u00e1l.","title":"Python Identifikador (Python Identifiers)"},{"location":"execute_python_syntax/#lina-no-identasaun-lines-and-indentation","text":"Python la fornese iha braces hodi hatudu bloku sira kona-ba k\u00f3digu ba klase no definisaun funsaun ka kontrola movimentu( flow control ). Espasu kada li\u00f1a iha klase ka funsaun iha espasu 4 ka kada tab ida. Pur ezemplu \u2212 class teste(): print(\"Ita nia familia\") class teste(): print(\"Ita nia familia\") def funs(): print(\"hatudu ita nia funsaun\")","title":"Li\u00f1a no Identasaun (Lines and Indentation)"},{"location":"execute_python_syntax/#kotasaun-iha-python-quotation-in-python","text":"Python simu de\u2019it quotes simples (\u2018), dupla (\u201c) no triplu (\u201c\u201d\u201d ka \u201c\u201d\u201c) quotes atu tuir string literals, bainhira tipu quote hah\u00fa no termina string. Triplu quotes sira uza hodi span string ba iha li\u00f1a oin-oin. Pur ezemplu hotu-hotu tuir mak leg\u00e1l. liafuan = 'Liafuan' sentence = \"Ida ne'e sentense.\" paragrafo = \"\"\"Ida mak paragrado.\"\"\u201d","title":"Kotasaun iha Python (Quotation in Python)"},{"location":"execute_python_syntax/#kometariu-iha-python-comments-in-python","text":"Koment\u00e1riu iha Python Sinal Hash (#) iha python hatudu katak ida ne\u2019e atu halo ka hakerek koment\u00e1riu kona-ba ita-nia skript ne\u2019eb\u00e9 ita halo. #!/usr/bin/python # Komentariu Dahuluk print (\"Hello, Python!\") # Komentariu Daruak F\u00f3-sai rezultadu hanesan tuir mai ne\u2019e: Hello, Python! Ita bele ket\u00edk koment\u00e1riu ida iha li\u00f1a ne\u2019eb\u00e9 hanesan hafoin deklarasaun ka espresaun name = \"Madisetti\" # Ida ne'e halo komentariu fila fali Ita bele halo koment\u00e1riu barak iha li\u00f1a hanesan tuir mai ne\u2019e : # Ida ne'e komentariu dahuluk. # Ida ne'e komentariu daruak. # Ida ne'e komentariu datoluk. # Kometariu remata. Sekuensia string ho triplu quotes bele uza hanesan koment\u00e1riu iha lina barak: '''Ida ne'e mak halo komentariu iha lina oin-oinka komentariu sira ne'ebe ita hakerek barak liu bele uza triplu quotes ida ne'e'''","title":"Kometariu iha Python (Comments in Python)"},{"location":"mkdocs_reference/","text":"Benvindu mai vizita MKDocs \u00b6 Hah\u00fa MkDocs \u00b6 Mkdocs mak jerador situs static ida nebe deze\u00f1a ona hodi dezenvole situs web dokumentasaun hanesan python no sira seluk. Iha l\u00edngua programasaun python, MkDocs mak projetu open source ka rekursu ida ne\u2019e nakloke ho apoiu barak hosi komunidade. Rekursu nebe uza hodi hakerek dokumentu sira mak uza rekursu markdown no konfigura uza rekursu yaml atu hatene konaba oinsa uza markdown bele lee nia referensia iha nee Markdown no rekursu yaml bele hare iha ne\u2019e Yaml . Iha karakter\u00edstika boot barak nebe inklui: Bele host iha nebe deit Theme diak no disponibilidade hadia Dokumentasaun ho Markdown Install Mkdocs \u00b6 Install ho jerente pakote Se karik uza ona pakote (hanesan apt-get , dnf , homebrew , yum , chocolatey , no sira seluk) nee ita bele buka install pakote refere konaba install \u201cMkDocs\u201d no bele hare nia versaun. Se karik ita nia jestora pakote la iha pakote \u201cMkDocs\u201d, ita bele uza nafatin ita boot nia pakote hodi instala \u201c Python \u201d no \u201c pip \u201d. Depois ita bele uza pip hodi instala MkDocs. MkDocs suporta Python versions 3.5, 3.6, 3.7, 3.8, no pypy3. Atu install mkdocs hanesan tuir mai no bele hare detallu husi instala MkDocs : $ pip install mkdocs Hafoin install ita bele hare verzaun Mkdocs nebe ita foin install. $ mkdocs --version mkdocs, version 1.1.2 from /home/nicko/.pyenv/versions/Devel/envs/mkdocs/lib/python3.8/site-packages/mkdocs (Python 3.8) Kria Projetu Foun \u00b6 Kria projetu foun iha MkDocs hanesan tuir mai nee. $ mkdocs new Mkdocs $ cd Mkdocs Konfigura mkdocs.yml ba ita nia projetu mkdocs mak hanesan docs/index.md ida nebe halo ho Markdown parte pajina dahuluk ita nia dokumentasaun. . \u2514\u2500\u2500 MKdocs \u251c\u2500\u2500 docs \u2502 \u251c\u2500\u2500 index.md \u2514\u2500\u2500 mkdocs.xml Ita bele edita file index.md no bele aumenta detallu konaba ita nia projetu no tuir mai ita bele hari ita nia dokumentasaun liu husi run mkdocs serve: Exekuta Projetu \u00b6 $ mkdocs serve INFO - Building documentation... INFO - Cleaning site directory [I 160402 15:50:43 server:271] Serving on http://127.0.0.1:8000 [I 160402 15:50:43 handlers:58] Start watching changes [I 160402 15:50:43 handlers:60] Start detecting changes Loke http://127.0.0.1:8000/ iha ita nia browser web atu hare dokumentasaun. Ita bele halo mudansa ba ita nia file Markdown no ita nia docs nebe sei kria automatikamente. Bele hare rezultadu. Aumenta dokumentasaun markdown foun \u00b6 Mkdocs fo abilidade ba ita atu kontinua aumenta ita nia dokumentasaun ho rekursu markdown nian ba dokumentasaun nebe ita rai sei rai iha pasta ka directory docs Bele hare exemplu : . \u2514\u2500\u2500 MKdocs \u251c\u2500\u2500 docs \u2502 \u251c\u2500\u2500 about.md \u2502 \u251c\u2500\u2500 execute_python_syntax.md \u2502 \u251c\u2500\u2500 index.md \u2502 \u251c\u2500\u2500 python_advanced_tutorials.md \u2502 \u251c\u2500\u2500 python_environment_setup.md \u2502 \u251c\u2500\u2500 python_notifikasaun.md \u2502 \u251c\u2500\u2500 python_other_tutorials.md \u2502 \u251c\u2500\u2500 python_overview.md \u2502 \u251c\u2500\u2500 python_tutorial.md \u2502 \u2514\u2500\u2500 python_variables.md \u2514\u2500\u2500 mkdocs.yml Kria nav ka menu \u00b6 Iha exemplu leten ita aumenta ona dokumentasaun ho mardown iha directory docs nia laran hamutuk ho index.md tuir mai ita presiza defini hanesan menu ka dropdown menu iha mkdocs.yml nia laran hanesan iha exemplu tuir mai: site_name: Niko Docs # ida nee kria navbar ka menu nav: - Matadalan: - 'Python Tutorial': 'python_tutorial.md' - Python Baziku: - 'Python Introdusaun': 'python_overview.md' - 'Python Kria Enviromentu': 'python_environment_setup' - 'Python Sintase': 'execute_python_syntax.md' - 'Python Variabel': 'python_variables.md' - Python Avansadu: - 'Python Tutorial Avansadu': 'python_advanced_tutorials.md' - Python Tutorial Seluk: - 'Python Tutorial Seluk': 'python_other_tutorials.md' - Python Topiku: - 'Python Notifikasaun': 'python_notifikasaun.md' - Konaba: - 'Referensia': 'about.md' Troka theme mkdocs \u00b6 Ita bele troka theme iha mkdocs mak hanesan: #Kria tema theme: name: readthedocs #iha nebe ita bele troka readthedocs tema ba mkdocs nav_style: red highlightjs: true hljs_languages: - yaml - rust Kria extra css no Image \u00b6 Iha mkdocs ita bele muda style tuir ita nia hakarak liu husi extra css ka ita bele uza image liu husi kria extra img iha mkdocs nia laran. Bele hare iha exemplu tuir mai ne\u2019e. . \u2514\u2500\u2500 MKdocs \u251c\u2500\u2500 css \u2502 \u251c\u2500\u2500 theme.css \u2502 \u2514\u2500\u2500 theme_extra.css \u251c\u2500\u2500 docs \u2502 \u251c\u2500\u2500 extra_css \u2502 \u2502 \u2514\u2500\u2500 extra.css #Kria extra css \u2502 \u251c\u2500\u2500 img \u2502 \u2502 \u2514\u2500\u2500 var.png #Kria extra img \u2502 \u251c\u2500\u2500 index.md \u2502 \u251c\u2500\u2500 python_overview.md \u2502 \u2514\u2500\u2500 python_variables.md \u251c\u2500\u2500 fonts \u2502 \u251c\u2500\u2500 fontawesome-webfont.eot \u251c\u2500\u2500 img \u2502 \u251c\u2500\u2500 favicon.ico \u2514\u2500\u2500 mkdocs.xyml Exemplu troka style heading 2 husi markdown nia iha extra.css h2 { color: red; } span.caption-text { color: cornflowerblue; } Hari situs mkdocs \u00b6 Hari ita nia dokumentasaun sai hanesan situs. Mkdocs sei fo aumatikamente dokumentu sira sei forma ho HTML index.html file no pasta ka directory no fo file static sira hanesan css , font , img ba directory. Atu hari ita nia situs ita sei run mkdocs build no wainhira ita atu update ka aumenta dokumentasaun ruma ita presiza hamos directory tuan no koko hari fila fali maneira hamoos mak ita exekuta mkdocs build --clean iha exemplu ida ne\u2019e sei hatudu deit konaba oinsa hari ita nia situs. $ mkdocs build Sei hatudu rezultadu hanesan: $ ls 404.html css fonts index.html mkdocs.yml search.html sitemap.xml about docs img js python search site Deploy situs Mkdocs \u00b6 MKdocs ita bele host Ita nia projetu bainhira ita nia dokumentasaun iha ona repository ida nebe p\u00fabliku hanesan GitHub, Bitbucket ka GitLab, ita bele hah\u00fa uza Read Docs nian iha importasaun docs ita-nia ka deploy mkdocs Iha dokumentasaun ida nee sei hatudu deit konaba deploy ba repository iha github nia mak hanesan kria repository foun kria github repository fo naran no tuir mai ita clone mai virtualenv local. Nota: Atu deploy ho github ba dahuluk ita presiza kria file .gitignore atu nune la bele deploy hotu directory site/ ba ita nia repository. atu kria .gitignore mak hanesan: $ echo \"site/\" >> .gitignore Atu deploy ita nia dokumentasaun ita exekuta $ mkdocs gh-deploy Exekusaun kodigu ida leten iha kualker branch nebe deit maibe detallu iha master , ho mkdocs wainhira ita deploy no run mkdocs gh-deploy sei kopia site ba branch gh-deploy no push ba github, gp-deploy nee autmatika wainhira ita run mkdocs gh-deploy. Hafoin ita deploy sei kria link ida refere ba ita nia account github nia exemplu https://joanico.github.io/MKdocs/ tuir mai ita bele ona asesu ita nia dokumentasaun iha kualker fatin ne\u2019e deit. Rekursu esterna \u00b6 Iha ne\u02bce iha rekursu estern\u00e1l balu atu ajuda ita aprende tan kona-ba MkDocs. MkDocs dokumentasaun Markdown syntax matadalan Hakerek ba imi-nia docs ho MkDocs","title":"Mkdocs reference"},{"location":"mkdocs_reference/#benvindu-mai-vizita-mkdocs","text":"","title":"Benvindu mai vizita MKDocs"},{"location":"mkdocs_reference/#hahu-mkdocs","text":"Mkdocs mak jerador situs static ida nebe deze\u00f1a ona hodi dezenvole situs web dokumentasaun hanesan python no sira seluk. Iha l\u00edngua programasaun python, MkDocs mak projetu open source ka rekursu ida ne\u2019e nakloke ho apoiu barak hosi komunidade. Rekursu nebe uza hodi hakerek dokumentu sira mak uza rekursu markdown no konfigura uza rekursu yaml atu hatene konaba oinsa uza markdown bele lee nia referensia iha nee Markdown no rekursu yaml bele hare iha ne\u2019e Yaml . Iha karakter\u00edstika boot barak nebe inklui: Bele host iha nebe deit Theme diak no disponibilidade hadia Dokumentasaun ho Markdown","title":"Hah\u00fa MkDocs"},{"location":"mkdocs_reference/#install-mkdocs","text":"Install ho jerente pakote Se karik uza ona pakote (hanesan apt-get , dnf , homebrew , yum , chocolatey , no sira seluk) nee ita bele buka install pakote refere konaba install \u201cMkDocs\u201d no bele hare nia versaun. Se karik ita nia jestora pakote la iha pakote \u201cMkDocs\u201d, ita bele uza nafatin ita boot nia pakote hodi instala \u201c Python \u201d no \u201c pip \u201d. Depois ita bele uza pip hodi instala MkDocs. MkDocs suporta Python versions 3.5, 3.6, 3.7, 3.8, no pypy3. Atu install mkdocs hanesan tuir mai no bele hare detallu husi instala MkDocs : $ pip install mkdocs Hafoin install ita bele hare verzaun Mkdocs nebe ita foin install. $ mkdocs --version mkdocs, version 1.1.2 from /home/nicko/.pyenv/versions/Devel/envs/mkdocs/lib/python3.8/site-packages/mkdocs (Python 3.8)","title":"Install Mkdocs"},{"location":"mkdocs_reference/#kria-projetu-foun","text":"Kria projetu foun iha MkDocs hanesan tuir mai nee. $ mkdocs new Mkdocs $ cd Mkdocs Konfigura mkdocs.yml ba ita nia projetu mkdocs mak hanesan docs/index.md ida nebe halo ho Markdown parte pajina dahuluk ita nia dokumentasaun. . \u2514\u2500\u2500 MKdocs \u251c\u2500\u2500 docs \u2502 \u251c\u2500\u2500 index.md \u2514\u2500\u2500 mkdocs.xml Ita bele edita file index.md no bele aumenta detallu konaba ita nia projetu no tuir mai ita bele hari ita nia dokumentasaun liu husi run mkdocs serve:","title":"Kria Projetu Foun"},{"location":"mkdocs_reference/#exekuta-projetu","text":"$ mkdocs serve INFO - Building documentation... INFO - Cleaning site directory [I 160402 15:50:43 server:271] Serving on http://127.0.0.1:8000 [I 160402 15:50:43 handlers:58] Start watching changes [I 160402 15:50:43 handlers:60] Start detecting changes Loke http://127.0.0.1:8000/ iha ita nia browser web atu hare dokumentasaun. Ita bele halo mudansa ba ita nia file Markdown no ita nia docs nebe sei kria automatikamente. Bele hare rezultadu.","title":"Exekuta Projetu"},{"location":"mkdocs_reference/#aumenta-dokumentasaun-markdown-foun","text":"Mkdocs fo abilidade ba ita atu kontinua aumenta ita nia dokumentasaun ho rekursu markdown nian ba dokumentasaun nebe ita rai sei rai iha pasta ka directory docs Bele hare exemplu : . \u2514\u2500\u2500 MKdocs \u251c\u2500\u2500 docs \u2502 \u251c\u2500\u2500 about.md \u2502 \u251c\u2500\u2500 execute_python_syntax.md \u2502 \u251c\u2500\u2500 index.md \u2502 \u251c\u2500\u2500 python_advanced_tutorials.md \u2502 \u251c\u2500\u2500 python_environment_setup.md \u2502 \u251c\u2500\u2500 python_notifikasaun.md \u2502 \u251c\u2500\u2500 python_other_tutorials.md \u2502 \u251c\u2500\u2500 python_overview.md \u2502 \u251c\u2500\u2500 python_tutorial.md \u2502 \u2514\u2500\u2500 python_variables.md \u2514\u2500\u2500 mkdocs.yml","title":"Aumenta dokumentasaun markdown foun"},{"location":"mkdocs_reference/#kria-nav-ka-menu","text":"Iha exemplu leten ita aumenta ona dokumentasaun ho mardown iha directory docs nia laran hamutuk ho index.md tuir mai ita presiza defini hanesan menu ka dropdown menu iha mkdocs.yml nia laran hanesan iha exemplu tuir mai: site_name: Niko Docs # ida nee kria navbar ka menu nav: - Matadalan: - 'Python Tutorial': 'python_tutorial.md' - Python Baziku: - 'Python Introdusaun': 'python_overview.md' - 'Python Kria Enviromentu': 'python_environment_setup' - 'Python Sintase': 'execute_python_syntax.md' - 'Python Variabel': 'python_variables.md' - Python Avansadu: - 'Python Tutorial Avansadu': 'python_advanced_tutorials.md' - Python Tutorial Seluk: - 'Python Tutorial Seluk': 'python_other_tutorials.md' - Python Topiku: - 'Python Notifikasaun': 'python_notifikasaun.md' - Konaba: - 'Referensia': 'about.md'","title":"Kria nav ka menu"},{"location":"mkdocs_reference/#troka-theme-mkdocs","text":"Ita bele troka theme iha mkdocs mak hanesan: #Kria tema theme: name: readthedocs #iha nebe ita bele troka readthedocs tema ba mkdocs nav_style: red highlightjs: true hljs_languages: - yaml - rust","title":"Troka theme mkdocs"},{"location":"mkdocs_reference/#kria-extra-css-no-image","text":"Iha mkdocs ita bele muda style tuir ita nia hakarak liu husi extra css ka ita bele uza image liu husi kria extra img iha mkdocs nia laran. Bele hare iha exemplu tuir mai ne\u2019e. . \u2514\u2500\u2500 MKdocs \u251c\u2500\u2500 css \u2502 \u251c\u2500\u2500 theme.css \u2502 \u2514\u2500\u2500 theme_extra.css \u251c\u2500\u2500 docs \u2502 \u251c\u2500\u2500 extra_css \u2502 \u2502 \u2514\u2500\u2500 extra.css #Kria extra css \u2502 \u251c\u2500\u2500 img \u2502 \u2502 \u2514\u2500\u2500 var.png #Kria extra img \u2502 \u251c\u2500\u2500 index.md \u2502 \u251c\u2500\u2500 python_overview.md \u2502 \u2514\u2500\u2500 python_variables.md \u251c\u2500\u2500 fonts \u2502 \u251c\u2500\u2500 fontawesome-webfont.eot \u251c\u2500\u2500 img \u2502 \u251c\u2500\u2500 favicon.ico \u2514\u2500\u2500 mkdocs.xyml Exemplu troka style heading 2 husi markdown nia iha extra.css h2 { color: red; } span.caption-text { color: cornflowerblue; }","title":"Kria extra css no Image"},{"location":"mkdocs_reference/#hari-situs-mkdocs","text":"Hari ita nia dokumentasaun sai hanesan situs. Mkdocs sei fo aumatikamente dokumentu sira sei forma ho HTML index.html file no pasta ka directory no fo file static sira hanesan css , font , img ba directory. Atu hari ita nia situs ita sei run mkdocs build no wainhira ita atu update ka aumenta dokumentasaun ruma ita presiza hamos directory tuan no koko hari fila fali maneira hamoos mak ita exekuta mkdocs build --clean iha exemplu ida ne\u2019e sei hatudu deit konaba oinsa hari ita nia situs. $ mkdocs build Sei hatudu rezultadu hanesan: $ ls 404.html css fonts index.html mkdocs.yml search.html sitemap.xml about docs img js python search site","title":"Hari situs mkdocs"},{"location":"mkdocs_reference/#deploy-situs-mkdocs","text":"MKdocs ita bele host Ita nia projetu bainhira ita nia dokumentasaun iha ona repository ida nebe p\u00fabliku hanesan GitHub, Bitbucket ka GitLab, ita bele hah\u00fa uza Read Docs nian iha importasaun docs ita-nia ka deploy mkdocs Iha dokumentasaun ida nee sei hatudu deit konaba deploy ba repository iha github nia mak hanesan kria repository foun kria github repository fo naran no tuir mai ita clone mai virtualenv local. Nota: Atu deploy ho github ba dahuluk ita presiza kria file .gitignore atu nune la bele deploy hotu directory site/ ba ita nia repository. atu kria .gitignore mak hanesan: $ echo \"site/\" >> .gitignore Atu deploy ita nia dokumentasaun ita exekuta $ mkdocs gh-deploy Exekusaun kodigu ida leten iha kualker branch nebe deit maibe detallu iha master , ho mkdocs wainhira ita deploy no run mkdocs gh-deploy sei kopia site ba branch gh-deploy no push ba github, gp-deploy nee autmatika wainhira ita run mkdocs gh-deploy. Hafoin ita deploy sei kria link ida refere ba ita nia account github nia exemplu https://joanico.github.io/MKdocs/ tuir mai ita bele ona asesu ita nia dokumentasaun iha kualker fatin ne\u2019e deit.","title":"Deploy situs Mkdocs"},{"location":"mkdocs_reference/#rekursu-esterna","text":"Iha ne\u02bce iha rekursu estern\u00e1l balu atu ajuda ita aprende tan kona-ba MkDocs. MkDocs dokumentasaun Markdown syntax matadalan Hakerek ba imi-nia docs ho MkDocs","title":"Rekursu esterna"},{"location":"python_advanced_tutorials/","text":"Python - Advanced Tutorials \u00b6 Python - Generators \u00b6 Python - List Comprehensions \u00b6 Python - Multiple Function Arguments \u00b6 Python - Regular Expression \u00b6 Python - Exception Handling \u00b6 Python - Sets \u00b6 Python - Serialization \u00b6 Python - Partial functions \u00b6 Python - Decorators \u00b6","title":"Python Tutorial Avansadu"},{"location":"python_advanced_tutorials/#python-advanced-tutorials","text":"","title":"Python - Advanced Tutorials"},{"location":"python_advanced_tutorials/#python-generators","text":"","title":"Python - Generators"},{"location":"python_advanced_tutorials/#python-list-comprehensions","text":"","title":"Python - List Comprehensions"},{"location":"python_advanced_tutorials/#python-multiple-function-arguments","text":"","title":"Python - Multiple Function Arguments"},{"location":"python_advanced_tutorials/#python-regular-expression","text":"","title":"Python - Regular Expression"},{"location":"python_advanced_tutorials/#python-exception-handling","text":"","title":"Python - Exception Handling"},{"location":"python_advanced_tutorials/#python-sets","text":"","title":"Python - Sets"},{"location":"python_advanced_tutorials/#python-serialization","text":"","title":"Python - Serialization"},{"location":"python_advanced_tutorials/#python-partial-functions","text":"","title":"Python - Partial functions"},{"location":"python_advanced_tutorials/#python-decorators","text":"","title":"Python - Decorators"},{"location":"python_data_type/","text":"Tipu Data \u00b6 Tipu data husi variavel ne\u2019eb\u00e9 ita kria no f\u00f3 nia val\u00f3r bele identifika hanesan tuir mai ne\u2019e bele integer, string ka float no boolean. String \u00b6 String (str) mak tipu data ida ne\u2019eb\u00e9 f\u00f3 sai karakter\u00edstika iha s\u00edmbolu ho marka quotation ida ka marka quotation kaduak. a. Quotation ida >>> a = 'Jose' >>> type(a) <class 'str'> b. Quotation kaduak >>> b = \"Maria\" >>> type(b) <class 'str'> Integer \u00b6 Integer (int) mak tipu data ida ne\u2019eb\u00e9 ho n\u00fameru decimal bele pozitivu no negativu husi 0 zero to\u2019o 9 , bele n\u00fameru octal no hexadecimal. Iha octal inisi\u00e1l ho 0o no hexadecimal sei hah\u00fa ho 0x . a. Valor Positivu >>> x = 10 >>> type(x) <class 'int'> b. Valor Negativu >>> y = -10 >>> print(y) -10 >>> type(y) <class 'int'> c. Valor boot >>> z = 100000000000000000000000 >>> print(z) 100000000000000000000000 >>> type(z) <class 'int'> d. Valor Octal >>> octalInt = 0o32 >>> print(octalInt) 26 >>> type(octalInt) <class 'int'> e. Valor Hexadecimal >>> hexInt = 0xEE >>> print(hexInt) 238 >>> type(hexInt) <class 'int'> Float \u00b6 Float mak tipu data ida ne\u2019eb\u00e9 reprezenta n\u00fameru ho pontu, ne\u2019eb\u00e9 ita hakerek ho pontu decimal ka ho string. a. Reprezenta float ho integer >>> x = float(10) >>> print(x) 10.0 >>> type(x) <class 'float'> b. Reprezenta float ho string >>> y = float(\"10\") >>> print(y) 10.0 >>> type(y) <class 'float'> Boolean \u00b6 Boolean tipu data ida ne\u2019eb\u00e9 ho val\u00f3r rua de\u2019it mak True no False ne\u2019eb\u00e9 eziste. >>> a = True >>> type(a) <class 'bool'> >>> b = False >>> type(b) <class 'bool'> Kompara entre valor rua >>> x = 5 >>> y = 10 >>> print(bool(x==y)) False","title":"Python Tipu Data"},{"location":"python_data_type/#tipu-data","text":"Tipu data husi variavel ne\u2019eb\u00e9 ita kria no f\u00f3 nia val\u00f3r bele identifika hanesan tuir mai ne\u2019e bele integer, string ka float no boolean.","title":"Tipu Data"},{"location":"python_data_type/#string","text":"String (str) mak tipu data ida ne\u2019eb\u00e9 f\u00f3 sai karakter\u00edstika iha s\u00edmbolu ho marka quotation ida ka marka quotation kaduak. a. Quotation ida >>> a = 'Jose' >>> type(a) <class 'str'> b. Quotation kaduak >>> b = \"Maria\" >>> type(b) <class 'str'>","title":"String"},{"location":"python_data_type/#integer","text":"Integer (int) mak tipu data ida ne\u2019eb\u00e9 ho n\u00fameru decimal bele pozitivu no negativu husi 0 zero to\u2019o 9 , bele n\u00fameru octal no hexadecimal. Iha octal inisi\u00e1l ho 0o no hexadecimal sei hah\u00fa ho 0x . a. Valor Positivu >>> x = 10 >>> type(x) <class 'int'> b. Valor Negativu >>> y = -10 >>> print(y) -10 >>> type(y) <class 'int'> c. Valor boot >>> z = 100000000000000000000000 >>> print(z) 100000000000000000000000 >>> type(z) <class 'int'> d. Valor Octal >>> octalInt = 0o32 >>> print(octalInt) 26 >>> type(octalInt) <class 'int'> e. Valor Hexadecimal >>> hexInt = 0xEE >>> print(hexInt) 238 >>> type(hexInt) <class 'int'>","title":"Integer"},{"location":"python_data_type/#float","text":"Float mak tipu data ida ne\u2019eb\u00e9 reprezenta n\u00fameru ho pontu, ne\u2019eb\u00e9 ita hakerek ho pontu decimal ka ho string. a. Reprezenta float ho integer >>> x = float(10) >>> print(x) 10.0 >>> type(x) <class 'float'> b. Reprezenta float ho string >>> y = float(\"10\") >>> print(y) 10.0 >>> type(y) <class 'float'>","title":"Float"},{"location":"python_data_type/#boolean","text":"Boolean tipu data ida ne\u2019eb\u00e9 ho val\u00f3r rua de\u2019it mak True no False ne\u2019eb\u00e9 eziste. >>> a = True >>> type(a) <class 'bool'> >>> b = False >>> type(b) <class 'bool'> Kompara entre valor rua >>> x = 5 >>> y = 10 >>> print(bool(x==y)) False","title":"Boolean"},{"location":"python_environment_setup/","text":"Python - Hahu no Kria Enviroment \u00b6 Python disponivel iha variasaun bo\u2019ot hosi plataforma inklui Linux no Mac OS X. Iha ne\u2019e oins\u00e1 atu setup ita-nia Python enviromentu. Lok\u00e1l Setup Enviromentu Loke termin\u00e1l iha Linux ka Mac Os no hakerek python atu hatene rezultadu ita instala tiha ona no versaun ne\u2019eb\u00e9 instala ona. Asesu situs Python \u00b6 Python atualiza ona source code no dokumentu foun sira ne\u2019eb\u00e9 disponivel ona iha ofisi\u00e1l website hosi Python https://www.python.org Ite bele download dokumentu python iha python doc . Dokumentu sira ne\u2019e disponivel iha HTML, PDF no PostScript formats. Instalasaun Python \u00b6 Distribuisaun Python disponivel iha variedade boot hosi plataforma sira. Ita presiza ba download k\u00f3digu bin\u00e1riu balu aplik\u00e1vel ba iha ita-nia plataforma no instalasaun Python. Unix no Instalasaun Linux Iha Linux python eziste ona maib\u00e9 ne\u2019e sei ho versaun tuan atu atualiza versaun foun iha maneira oin-oin iha ne\u2019e hatudu de\u2019it maneira ida mak ho etapa simples atu halo instalasaun Python iha Unix/Linux machine. Loke Web browser no ba iha download python Halo tuir link download zipped source code disponivel ba Unix/Linux. Download no extract fil\u00e9. Edita m\u00f3dulu/setup file ne\u2019eb\u00e9 mak ita hakarak ba kostume opsaun balu. Run ./configure script Make Make install Instalasaun Python ne\u2019e iha lokasaun standar /usr/local/bin no libraria sira iha /usr/local/lib/pythonXX iha ne\u2019eb\u00e9 XX iha versaun Python. Instalasaun Windows Iha ne\u2019e mak etapa atu instala Python ba iha Windows machine. Loke Web browser no ba iha download python Halo tuir link ba iha instalasaun Windows python-XYZ.msi dokumentus iha ne\u2019eb\u00e9 XYZ iha versaun ita presiza halo instalasaun. Atu usa instalasaun iha ne\u2019e python-XYZ.msi, sistema Windows suporta Microsoft Installer 2.0. Rai dokumentu instalasaun ba ita-nia lok\u00e1l machine no run ida ne\u2019e atu hetan nia rezultadu se nia machine suporta MSI. Run dokumentu download. Ne\u2019e lori instalasaun Python wizard, ne\u2019eb\u00e9 realiza fasil atu uza. Foin aseita iha defaul settings, hein to instalasaun hotu, no ita remata. Instalasaun Macintosh Macintosh eziste ona Python. Maib\u00e9 ne\u2019e dala ruma sei versaun tuan ita presiza upgrade ba versaun foun. Hare download python iha instrusaun ne\u2019e hetan versaun agora ho extra tools ba suporta dezenvolve iha Mac. Iha folder Mac OS\u2019s molok Mas OS X 10.3(realiza iha 2003) Jack Jansen mantein ida ne\u2019e no ita bele asesu hotu atu hatama dokumentu ba iha nia website - download python mac Ita bele hetan detallu instalasaun kompletu ba instalasaun Mac OS.","title":"Python environment setup"},{"location":"python_environment_setup/#python-hahu-no-kria-enviroment","text":"Python disponivel iha variasaun bo\u2019ot hosi plataforma inklui Linux no Mac OS X. Iha ne\u2019e oins\u00e1 atu setup ita-nia Python enviromentu. Lok\u00e1l Setup Enviromentu Loke termin\u00e1l iha Linux ka Mac Os no hakerek python atu hatene rezultadu ita instala tiha ona no versaun ne\u2019eb\u00e9 instala ona.","title":"Python - Hahu no Kria Enviroment"},{"location":"python_environment_setup/#asesu-situs-python","text":"Python atualiza ona source code no dokumentu foun sira ne\u2019eb\u00e9 disponivel ona iha ofisi\u00e1l website hosi Python https://www.python.org Ite bele download dokumentu python iha python doc . Dokumentu sira ne\u2019e disponivel iha HTML, PDF no PostScript formats.","title":"Asesu situs Python"},{"location":"python_environment_setup/#instalasaun-python","text":"Distribuisaun Python disponivel iha variedade boot hosi plataforma sira. Ita presiza ba download k\u00f3digu bin\u00e1riu balu aplik\u00e1vel ba iha ita-nia plataforma no instalasaun Python. Unix no Instalasaun Linux Iha Linux python eziste ona maib\u00e9 ne\u2019e sei ho versaun tuan atu atualiza versaun foun iha maneira oin-oin iha ne\u2019e hatudu de\u2019it maneira ida mak ho etapa simples atu halo instalasaun Python iha Unix/Linux machine. Loke Web browser no ba iha download python Halo tuir link download zipped source code disponivel ba Unix/Linux. Download no extract fil\u00e9. Edita m\u00f3dulu/setup file ne\u2019eb\u00e9 mak ita hakarak ba kostume opsaun balu. Run ./configure script Make Make install Instalasaun Python ne\u2019e iha lokasaun standar /usr/local/bin no libraria sira iha /usr/local/lib/pythonXX iha ne\u2019eb\u00e9 XX iha versaun Python. Instalasaun Windows Iha ne\u2019e mak etapa atu instala Python ba iha Windows machine. Loke Web browser no ba iha download python Halo tuir link ba iha instalasaun Windows python-XYZ.msi dokumentus iha ne\u2019eb\u00e9 XYZ iha versaun ita presiza halo instalasaun. Atu usa instalasaun iha ne\u2019e python-XYZ.msi, sistema Windows suporta Microsoft Installer 2.0. Rai dokumentu instalasaun ba ita-nia lok\u00e1l machine no run ida ne\u2019e atu hetan nia rezultadu se nia machine suporta MSI. Run dokumentu download. Ne\u2019e lori instalasaun Python wizard, ne\u2019eb\u00e9 realiza fasil atu uza. Foin aseita iha defaul settings, hein to instalasaun hotu, no ita remata. Instalasaun Macintosh Macintosh eziste ona Python. Maib\u00e9 ne\u2019e dala ruma sei versaun tuan ita presiza upgrade ba versaun foun. Hare download python iha instrusaun ne\u2019e hetan versaun agora ho extra tools ba suporta dezenvolve iha Mac. Iha folder Mac OS\u2019s molok Mas OS X 10.3(realiza iha 2003) Jack Jansen mantein ida ne\u2019e no ita bele asesu hotu atu hatama dokumentu ba iha nia website - download python mac Ita bele hetan detallu instalasaun kompletu ba instalasaun Mac OS.","title":"Instalasaun Python"},{"location":"python_list_slicing/","text":"Python List Slicing \u00b6 Python iha lista bolu slicing hanesan pr\u00e1tika kom\u00fan no dala barak uza hanesan meius ida ba programmer sira hodi rezolve problema efisiente sira. Konsidera lista python nian, In order atu hetan asesu ba elementu oioin iha lista ida, ita presiza ko\u2019a lista, dalan ida atu halo ida ne\u2019e mak uza slicing operad\u00f3r simples. Iha operad\u00f3r ida ne\u2019e, ida ita bele espes\u00edfika atu hah\u00fa ko\u2019a/slice iha ne\u2019eb\u00e9 no remata iha ne\u2019eb\u00e9 no m\u00f3s espasu hakat dala hira, no ikus liu sei f\u00f3 sai rezultadu iha lista ne\u2019eb\u00e9 eziste ona. Syntax: \u00b6 Lst [Initial:End:IndexJump] Karik List iha leten maka espresaun iha leten sei ezekuta parte husi lista index hah\u00fa no remata no espasu ka haat medida index Jump. Indexing \u00b6 1. Positive Indexes # Hahu ho lista List = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9] # copy sai lista ka fo sai lista print(List[::]) Fo sai rezultadu [0, 1, 2, 3, 4, 5, 6, 7, 8, 9] 2. Negative Indexes # INDEX # post = [ 0| 1 | 2 | 3 | 4 | 5] # Nega = [-5|-4 |-3 |-2 | -1] # Hahu ho lista List = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9] # Fo sai lista ho negativu print(List[-10::1]) Fo sai rezultadu [0, 1, 2, 3, 4, 5, 6, 7, 8, 9] 3. Slicing # Hahu ho lista List = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9] print(List[1:5]) # 1 reprezenta index hahu no 5 reprezenta index remata no rezultadu hatudu katak [1, 2, 3, 4] sei foti deit valor antes index 5 ba kotuk Fosai rezultadu [1, 2, 3, 4] # Hahu ho lista List = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9] # Fo sai rezultadu hanesan range print(List[3:9:2]) # 3 reprezenta index hahu to remata 9 no 2 step Fosai rezultadu [3, 5, 7] # Hahu ho lista List = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9] # Fo sai rezultadu hanesan range print(List[::]) # :: reprezenta index hahu no index remata ka fo sai lista tomak la slice Fosai rezultadu [0, 1, 2, 3, 4, 5, 6, 7, 8, 9] # Hahu ho lista List = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9] # Fo sai rezultadu hanesan range print(List[::2]) # :: reprezenta index hahu no remata no 2 step Fosai rezultadu [0, 2, 4, 6, 8] # Hahu ho lista List = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9] # reverze lista husi 0 ba 9 print(List[::-1]) # reverse lista no fo hakat ka step 3 print(List[::-3]) print(List[:1:-2]) Fosai rezultadu [9, 8, 7, 6, 5, 4, 3, 2, 1, 0] [9, 6, 3, 0] [9, 7, 5, 3] # Hahu ho lista List = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9] # Ida nee f\u00f3 sai rezultadu ho lista mamuk tanba hah\u00fa ho index sanulu maib\u00e9 iha lista la to'o sanulu no etapa 2 la iha rezultadu tanba la iha val\u00f3r ne'eb\u00e9 hakat liu index sanulu # karik bele kria ezemplu seluk hanesan print(List[4::2]) sei f\u00f3 sai rezultadu [4, 6, 8] print(List[10::2]) # Iha list slicing index hah\u00fa to remata ita la bele f\u00f3 hanesan iha ezemplu kraik nee nia sei la bele f\u00f3 rezultadu. # Karik atu f\u00f3 sai rezultadu iha index hah\u00fa no remata la bele hanesan print(List[1:4:1]) sei f\u00f3 sai rezultadu [1, 2, 3] print(List[1:1:1]) # Iha list slicing index negativu m\u00f3s hanesan hah\u00fa to remata ita la bele f\u00f3 hanesan iha ezemplu kraik nee nia sei la bele f\u00f3 rezultadu. # Karik atu f\u00f3 sai rezultadu iha index hah\u00fa no remata la bele hanesan print(List[-1:-4:-1]) sei fo sai rezultadu [9, 8, 7] print(List[-1:-1:-1]) # Iha slice mos ita labele fo valor remata to zero print(List[:0:]) Fosai rezultadu [] [] [] [] # Hahu ho lista List = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9] # Fo sai rezultadu hahu husi index 4 too remata no hakat espasu 2 print(List[1:3]) # Fo sai rezultadu hahu husi index 1 too remata 4 no hakat espasu 2 print(List[1:4:1]) # Fo sai rezultadu reverse no remata iha index 4 no hakat espasu ida print(List[-1:-4:-1]) Fosai rezultadu [1, 2] [1, 2, 3] [9, 8, 7] colors = ['red', 'green', 'blue', 'orange'] print(colors[1:3]) Fosai rezultadu [\u2018green\u2019, \u2018blue\u2019] 4. Assign data | # Hahu ho lista List = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9] # Fo sai lista print(List[::]) Fosai rezultadu [0, 1, 2, 3, 4, 5, 6, 7, 8, 9] # assign valor ba array nia laran List[4:6] = [10, 11] print(List) Fosai rezultadu [0, 1, 2, 3, 10, 11, 6, 7, 8, 9] 5. Slice String b = \"Hello, World!\" print(b[2:5]) Fosai rezultadu llo print(b[-1::-1]) Fosai rezultadu !dlroW ,olleH print(b[:5]) Fosai rezultadu Hello print(b[-5:-2]) Fosai rezultadu orl 6. Python slice() Function b = \"Hello, World!\" s = slice(5) # sei foti letra 4 antes index 5 ba kotuk print(b[s]) Fosai rezultadu Hello b = \"Hello, World!\" s = slice(3, 6) # sei foti letra hahu husi index 3 too antes index 6 ba kotuk print(b[s]) Fosai rezultadu lo, b = \"Hello, World!\" s = slice(3, 10, 2) # sei foti letra hahu husi index 3 too antes index 10 ba kotuk no fo sai deit letra husi espasu 2 print(b[s]) Fosai rezultadu l,Wr","title":"Python Slice"},{"location":"python_list_slicing/#python-list-slicing","text":"Python iha lista bolu slicing hanesan pr\u00e1tika kom\u00fan no dala barak uza hanesan meius ida ba programmer sira hodi rezolve problema efisiente sira. Konsidera lista python nian, In order atu hetan asesu ba elementu oioin iha lista ida, ita presiza ko\u2019a lista, dalan ida atu halo ida ne\u2019e mak uza slicing operad\u00f3r simples. Iha operad\u00f3r ida ne\u2019e, ida ita bele espes\u00edfika atu hah\u00fa ko\u2019a/slice iha ne\u2019eb\u00e9 no remata iha ne\u2019eb\u00e9 no m\u00f3s espasu hakat dala hira, no ikus liu sei f\u00f3 sai rezultadu iha lista ne\u2019eb\u00e9 eziste ona.","title":"Python List Slicing"},{"location":"python_list_slicing/#syntax","text":"Lst [Initial:End:IndexJump] Karik List iha leten maka espresaun iha leten sei ezekuta parte husi lista index hah\u00fa no remata no espasu ka haat medida index Jump.","title":"Syntax:"},{"location":"python_list_slicing/#indexing","text":"1. Positive Indexes # Hahu ho lista List = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9] # copy sai lista ka fo sai lista print(List[::]) Fo sai rezultadu [0, 1, 2, 3, 4, 5, 6, 7, 8, 9] 2. Negative Indexes # INDEX # post = [ 0| 1 | 2 | 3 | 4 | 5] # Nega = [-5|-4 |-3 |-2 | -1] # Hahu ho lista List = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9] # Fo sai lista ho negativu print(List[-10::1]) Fo sai rezultadu [0, 1, 2, 3, 4, 5, 6, 7, 8, 9] 3. Slicing # Hahu ho lista List = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9] print(List[1:5]) # 1 reprezenta index hahu no 5 reprezenta index remata no rezultadu hatudu katak [1, 2, 3, 4] sei foti deit valor antes index 5 ba kotuk Fosai rezultadu [1, 2, 3, 4] # Hahu ho lista List = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9] # Fo sai rezultadu hanesan range print(List[3:9:2]) # 3 reprezenta index hahu to remata 9 no 2 step Fosai rezultadu [3, 5, 7] # Hahu ho lista List = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9] # Fo sai rezultadu hanesan range print(List[::]) # :: reprezenta index hahu no index remata ka fo sai lista tomak la slice Fosai rezultadu [0, 1, 2, 3, 4, 5, 6, 7, 8, 9] # Hahu ho lista List = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9] # Fo sai rezultadu hanesan range print(List[::2]) # :: reprezenta index hahu no remata no 2 step Fosai rezultadu [0, 2, 4, 6, 8] # Hahu ho lista List = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9] # reverze lista husi 0 ba 9 print(List[::-1]) # reverse lista no fo hakat ka step 3 print(List[::-3]) print(List[:1:-2]) Fosai rezultadu [9, 8, 7, 6, 5, 4, 3, 2, 1, 0] [9, 6, 3, 0] [9, 7, 5, 3] # Hahu ho lista List = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9] # Ida nee f\u00f3 sai rezultadu ho lista mamuk tanba hah\u00fa ho index sanulu maib\u00e9 iha lista la to'o sanulu no etapa 2 la iha rezultadu tanba la iha val\u00f3r ne'eb\u00e9 hakat liu index sanulu # karik bele kria ezemplu seluk hanesan print(List[4::2]) sei f\u00f3 sai rezultadu [4, 6, 8] print(List[10::2]) # Iha list slicing index hah\u00fa to remata ita la bele f\u00f3 hanesan iha ezemplu kraik nee nia sei la bele f\u00f3 rezultadu. # Karik atu f\u00f3 sai rezultadu iha index hah\u00fa no remata la bele hanesan print(List[1:4:1]) sei f\u00f3 sai rezultadu [1, 2, 3] print(List[1:1:1]) # Iha list slicing index negativu m\u00f3s hanesan hah\u00fa to remata ita la bele f\u00f3 hanesan iha ezemplu kraik nee nia sei la bele f\u00f3 rezultadu. # Karik atu f\u00f3 sai rezultadu iha index hah\u00fa no remata la bele hanesan print(List[-1:-4:-1]) sei fo sai rezultadu [9, 8, 7] print(List[-1:-1:-1]) # Iha slice mos ita labele fo valor remata to zero print(List[:0:]) Fosai rezultadu [] [] [] [] # Hahu ho lista List = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9] # Fo sai rezultadu hahu husi index 4 too remata no hakat espasu 2 print(List[1:3]) # Fo sai rezultadu hahu husi index 1 too remata 4 no hakat espasu 2 print(List[1:4:1]) # Fo sai rezultadu reverse no remata iha index 4 no hakat espasu ida print(List[-1:-4:-1]) Fosai rezultadu [1, 2] [1, 2, 3] [9, 8, 7] colors = ['red', 'green', 'blue', 'orange'] print(colors[1:3]) Fosai rezultadu [\u2018green\u2019, \u2018blue\u2019] 4. Assign data | # Hahu ho lista List = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9] # Fo sai lista print(List[::]) Fosai rezultadu [0, 1, 2, 3, 4, 5, 6, 7, 8, 9] # assign valor ba array nia laran List[4:6] = [10, 11] print(List) Fosai rezultadu [0, 1, 2, 3, 10, 11, 6, 7, 8, 9] 5. Slice String b = \"Hello, World!\" print(b[2:5]) Fosai rezultadu llo print(b[-1::-1]) Fosai rezultadu !dlroW ,olleH print(b[:5]) Fosai rezultadu Hello print(b[-5:-2]) Fosai rezultadu orl 6. Python slice() Function b = \"Hello, World!\" s = slice(5) # sei foti letra 4 antes index 5 ba kotuk print(b[s]) Fosai rezultadu Hello b = \"Hello, World!\" s = slice(3, 6) # sei foti letra hahu husi index 3 too antes index 6 ba kotuk print(b[s]) Fosai rezultadu lo, b = \"Hello, World!\" s = slice(3, 10, 2) # sei foti letra hahu husi index 3 too antes index 10 ba kotuk no fo sai deit letra husi espasu 2 print(b[s]) Fosai rezultadu l,Wr","title":"Indexing"},{"location":"python_notifikasaun/","text":"Uza Python hodi kalkula loron moris \u00b6 Kalkula loron moris uza python. Vizaun Jeral \u00b6 Iha t\u00f3piku ida ne\u2019e sei ko\u2019alia kona-ba uza funsaun python hodi halo kalkula tinan autom\u00e1tiku ho importa fil\u00e9 csv no dataframe hodi f\u00f3 sai rezultadu. Ezemplu: Fahe subs\u00eddiu bazeia ba ema nia tinan ka ita bele hatene ohin loron ema na\u2019in hira mak selebra tinan. Instrumentu \u00b6 Instrumentu ne\u2019eb\u00e9 sei uza mak : Asegura katak ita instala ona python2 ka python3 iha ita-nia laptop Instala jupyter notebook ka lab Instala python pandas Prosesu Exekuta \u00b6 Rejistu tinan iha excel fil\u00e9 ho No , Municipio , Posto , Suco , Aldeia , Naran , Ke-BI , Data-Moris no save ho tipu formatu csv iha diretory ne\u2019eb\u00e9 ita atu halo kalkulasaun. Loke Jupyter lab iha termin\u00e1l jupyter lab Kria fil\u00e9 jupyter ida ho naran kalkula_tinan hamutuk ho file excel ne\u2019eb\u00e9 ita rai hanesan fil\u00e9 csv. Flowchart 1 konaba prosesu kalkula tinan. 4.1. Import python library import pandas as pd from datetime import datetime from datetime import date \u200b 4.2. Kria data variabel ida ho tipu dictionary no hatama ba data frame d = {'No': [1, 2, 3], \"Naran\": [\"Mario\", \"Antonio\", \"Joanico\"], \"data_moris\" ['17.02.1960', '27.02.1961', '07.01.1991']} df = pd.DataFrame(data=d) \u200b 4.3. Kria funsaun konaba kalkula tinan. def kalkula_tinan(data_moris): born = datetime.strptime(data_moris, \"%d.%m.%Y\").date() today = date.today() return today.year - born.year - ((today.month, today.day) < (born.month, born.day)) 4.4. Kria funsaun ida konaba notifikasaun tinan moris nian. def notifikasaun(tinan): if tinan == 60: return \"Parabens Ohin Ita hetan ona subsidu\" elif tinan >= 60: return \"Ita hetan ona subsidu\" elif tinan <= 60: return \"Favor hein ita nia subsidu\" \u200b 4.5. Ezekuta python no fo sai rezultadu df['age'] = df['data_moris'].apply(kalkula_tinan) df['mensajen'] = df['age'].apply(notifikasaun) df Rezultadu: Flowchart 2 konaba import csv file no uza panda data frame hodi kalkula tinan. 5.1 Import python library from datetime import datetime from datetime import date import pandas as pd df = pd.read_csv('naran.csv', sep=';') 5.2 Kria funsaun konaba kalkula tinan. # Kria funsaun Kalkula tinan def kalkula_tinan(data_moris): # kria tipu format tinan nian born = pd.to_datetime(data_moris, format=\"%Y-%m-%d\") today = date.today() # kalkula tinan moris ho data ohin nian return today.year - born.year - ((today.month, today.day) > (born.month, born.day)) \u200b 5.3 Kria funsaun ida konaba notifikasaun tinan moris nian. # Kria funsaun haruka konaba tinan def notifikasaun(tinan): if tinan == 60: return \"Parabens Ohin Ita hetan ona subsidu\" elif tinan >= 60: return \"Ita hetan ona subsidu\" elif tinan <= 60: return \"Favor hein ita nia subsidu\" \u200b 5.4 Ezekuta rezultadu ho python # kria koluna foun ho naran tinan no aplika tinan df['tinan'] = df['Loron_Moris'].apply(kalkula_tinan) df['mensajen'] = df['tinan'].apply(notifikasaun) #print valor espesifiku. df = df.loc[df['tinan'] == 60] \u200b 5.5 Kria file csv foun husi rezultadu: #kria csv file df = df.to_csv(\"tinan.csv\", encoding='utf-8', index=False) df Rezultadu \u00b6 \u200b \u200b","title":"Python Notifikasaun"},{"location":"python_notifikasaun/#uza-python-hodi-kalkula-loron-moris","text":"Kalkula loron moris uza python.","title":"Uza Python hodi kalkula loron moris"},{"location":"python_notifikasaun/#vizaun-jeral","text":"Iha t\u00f3piku ida ne\u2019e sei ko\u2019alia kona-ba uza funsaun python hodi halo kalkula tinan autom\u00e1tiku ho importa fil\u00e9 csv no dataframe hodi f\u00f3 sai rezultadu. Ezemplu: Fahe subs\u00eddiu bazeia ba ema nia tinan ka ita bele hatene ohin loron ema na\u2019in hira mak selebra tinan.","title":"Vizaun Jeral"},{"location":"python_notifikasaun/#instrumentu","text":"Instrumentu ne\u2019eb\u00e9 sei uza mak : Asegura katak ita instala ona python2 ka python3 iha ita-nia laptop Instala jupyter notebook ka lab Instala python pandas","title":"Instrumentu"},{"location":"python_notifikasaun/#prosesu-exekuta","text":"Rejistu tinan iha excel fil\u00e9 ho No , Municipio , Posto , Suco , Aldeia , Naran , Ke-BI , Data-Moris no save ho tipu formatu csv iha diretory ne\u2019eb\u00e9 ita atu halo kalkulasaun. Loke Jupyter lab iha termin\u00e1l jupyter lab Kria fil\u00e9 jupyter ida ho naran kalkula_tinan hamutuk ho file excel ne\u2019eb\u00e9 ita rai hanesan fil\u00e9 csv. Flowchart 1 konaba prosesu kalkula tinan. 4.1. Import python library import pandas as pd from datetime import datetime from datetime import date \u200b 4.2. Kria data variabel ida ho tipu dictionary no hatama ba data frame d = {'No': [1, 2, 3], \"Naran\": [\"Mario\", \"Antonio\", \"Joanico\"], \"data_moris\" ['17.02.1960', '27.02.1961', '07.01.1991']} df = pd.DataFrame(data=d) \u200b 4.3. Kria funsaun konaba kalkula tinan. def kalkula_tinan(data_moris): born = datetime.strptime(data_moris, \"%d.%m.%Y\").date() today = date.today() return today.year - born.year - ((today.month, today.day) < (born.month, born.day)) 4.4. Kria funsaun ida konaba notifikasaun tinan moris nian. def notifikasaun(tinan): if tinan == 60: return \"Parabens Ohin Ita hetan ona subsidu\" elif tinan >= 60: return \"Ita hetan ona subsidu\" elif tinan <= 60: return \"Favor hein ita nia subsidu\" \u200b 4.5. Ezekuta python no fo sai rezultadu df['age'] = df['data_moris'].apply(kalkula_tinan) df['mensajen'] = df['age'].apply(notifikasaun) df Rezultadu: Flowchart 2 konaba import csv file no uza panda data frame hodi kalkula tinan. 5.1 Import python library from datetime import datetime from datetime import date import pandas as pd df = pd.read_csv('naran.csv', sep=';') 5.2 Kria funsaun konaba kalkula tinan. # Kria funsaun Kalkula tinan def kalkula_tinan(data_moris): # kria tipu format tinan nian born = pd.to_datetime(data_moris, format=\"%Y-%m-%d\") today = date.today() # kalkula tinan moris ho data ohin nian return today.year - born.year - ((today.month, today.day) > (born.month, born.day)) \u200b 5.3 Kria funsaun ida konaba notifikasaun tinan moris nian. # Kria funsaun haruka konaba tinan def notifikasaun(tinan): if tinan == 60: return \"Parabens Ohin Ita hetan ona subsidu\" elif tinan >= 60: return \"Ita hetan ona subsidu\" elif tinan <= 60: return \"Favor hein ita nia subsidu\" \u200b 5.4 Ezekuta rezultadu ho python # kria koluna foun ho naran tinan no aplika tinan df['tinan'] = df['Loron_Moris'].apply(kalkula_tinan) df['mensajen'] = df['tinan'].apply(notifikasaun) #print valor espesifiku. df = df.loc[df['tinan'] == 60] \u200b 5.5 Kria file csv foun husi rezultadu: #kria csv file df = df.to_csv(\"tinan.csv\", encoding='utf-8', index=False) df","title":"Prosesu Exekuta"},{"location":"python_notifikasaun/#rezultadu","text":"\u200b \u200b","title":"Rezultadu"},{"location":"python_other_tutorials/","text":"Python - Other Python Tutorials \u00b6 Python - Database Access \u00b6 Python - Network Programming \u00b6 Python - GUI Programming \u00b6 Python - Web development \u00b6 Python - Framework \u00b6 Botle Flask Django","title":"Python Tutorial Seluk"},{"location":"python_other_tutorials/#python-other-python-tutorials","text":"","title":"Python - Other Python Tutorials"},{"location":"python_other_tutorials/#python-database-access","text":"","title":"Python - Database Access"},{"location":"python_other_tutorials/#python-network-programming","text":"","title":"Python - Network Programming"},{"location":"python_other_tutorials/#python-gui-programming","text":"","title":"Python - GUI Programming"},{"location":"python_other_tutorials/#python-web-development","text":"","title":"Python - Web development"},{"location":"python_other_tutorials/#python-framework","text":"Botle Flask Django","title":"Python - Framework"},{"location":"python_tutorial/","text":"Python Tutorial in Tetun \u00b6 Table of Contents \u00b6 Python Basics Tutorial \u00b6 Python - Home Python - Overview Python - Environment Setup Python - Basic Syntax Python - Variables and Types Python - Python Numbers Python - Strings Python - Lists Python - Tuples Python - Dictionar Python - Data Type Conversion Python - Basic Operators Python - String Formatting Python - Basic String Operations Python - Conditions Python - Loops Python - Functions Python - Classes and Objects Python - Dictionaries Python - Modules and Packages Python - Data Science Tutorials Python - Numpy Arrays Python - Pandas Basics Python - Advanced Tutorials \u00b6 Python - Generators Python - List Comprehensions Python - Multiple Function Arguments Python - Regular Expression Python - Exception Handling Python - Sets Python - Serialization Python - Partial functions Python - Decorators Python - Other Python Tutorials \u00b6 Python - Database Access Python - Network Programming Python - GUI Programming Python - Web development Python - Framework 1. Botle 2. Flask 3. Django","title":"Python Tutorial in Tetun"},{"location":"python_tutorial/#python-tutorial-in-tetun","text":"","title":"Python Tutorial in Tetun"},{"location":"python_tutorial/#table-of-contents","text":"","title":"Table of Contents"},{"location":"python_tutorial/#python-basics-tutorial","text":"Python - Home Python - Overview Python - Environment Setup Python - Basic Syntax Python - Variables and Types Python - Python Numbers Python - Strings Python - Lists Python - Tuples Python - Dictionar Python - Data Type Conversion Python - Basic Operators Python - String Formatting Python - Basic String Operations Python - Conditions Python - Loops Python - Functions Python - Classes and Objects Python - Dictionaries Python - Modules and Packages Python - Data Science Tutorials Python - Numpy Arrays Python - Pandas Basics","title":"Python Basics Tutorial"},{"location":"python_tutorial/#python-advanced-tutorials","text":"Python - Generators Python - List Comprehensions Python - Multiple Function Arguments Python - Regular Expression Python - Exception Handling Python - Sets Python - Serialization Python - Partial functions Python - Decorators","title":"Python - Advanced Tutorials"},{"location":"python_tutorial/#python-other-python-tutorials","text":"Python - Database Access Python - Network Programming Python - GUI Programming Python - Web development Python - Framework 1. Botle 2. Flask 3. Django","title":"Python - Other Python Tutorials"},{"location":"python_variables/","text":"Python - Variabel \u00b6 Saida mak Variabel ? Variavel mak fatin mem\u00f3ria rezerva ida hodi rai val\u00f3r sira. Signifika katak bainhira ita kria variavel ida ita rezerva hela fatin mamuk iha mem\u00f3ria, val\u00f3r sira ne\u2019eb\u00e9 ita rai bele ho tipu data interger ka karakter\u00edstika sira. Deklara variabel \u00b6 Atu deklara variavel iha python partikularmente ita identifika Naran no Valor: Naran mak hodi identifika variavel. Val\u00f3r bele identifika depois operad\u00f3r (=) . Por ezemplu: a = 1 Notas: a mak identifika ona naran husi variavel no val\u00f3r mak 1 . Naran Variavel \u00b6 Python naran variavel bele refere ba kualk\u00e9r naran husi variavel bele hakerek ho letra mais-kula ka minus-kula no bele hakerek dijit\u00e1l husi 0 to\u2019o 9 no uza s\u00edmbolu sira hanesan underscore(__) >>> naran = \"Mario\" >>> tinan = 30 >>> altura = 168 Print variable naran : >>> print(naran) >>> print(tinan) >>> print(altura) Fo sai rezultadu: Mario 30 168 Multipla Assignment \u00b6 Iha python bele kria variavel barak no refere ba val\u00f3r ida de\u2019it ka ita bele kria val\u00f3r ida bele assign ba multipla variavel ka variavel oin-oin. Ezemplu: a. Assign val\u00f3r ida ba multipla variavel ka bele kria multipla variavel f\u00f3 val\u00f3r ida edit. a = b = c = 10 print(a) print(b) print(c) b. Assign multipla valor ba multipla variavel x, y, z = 10, 15, \"hello\" print (x) print (y) print (z) Tipu Variavel \u00b6 Tipu python variavel iha rua lokal variabel no global variavel. Lokal Variavel Lok\u00e1l variavel mak define iha funsaun nia laran no iha local scope. Ezemplu: # Deklara funsaun def funs(): # defini lokal variabel a = 20 print(\"Local variabel a mak\", a) # bolu funsaun funs() Fo sai rezultadu Local variabel a mak 20 Glob\u00e1l Variabel bele uza jer\u00e1l ka la\u2019\u00f3s iha funsaun nia laran ka glob\u00e1l scope no bele uza m\u00f3s iha funsaun nia laran ka local scope maib\u00e9 tenki uza global keyword. Ezemplu: a = 20 # Global variabel # Deklara funsaun def funs(): print(\"global variabel a mak\", a) # bolu funsaun funs() Fo sai rezultadu global variabel a mak 20 Ezemplu glob\u00e1l variavel iha funsaun nia laran uza global keyword: # Deklara funsaun def funs(): global a a = 20 # defini lokal variabel print(\"global a mak\", a) # bolu funsaun funs() Fo sai rezultadu global a mak 20 Ezemplu kona-ba deklara glob\u00e1l no lok\u00e1l variavel iha funsaun nia laran: # Deklara funsaun def funs(): global a a = 20 h = 2 # defini lokal variabel print(\"global\", a, \"no local\", h) funs() # bolu funsaun Fo sai rezultadu global 20 no local 2","title":"Python Variabel"},{"location":"python_variables/#python-variabel","text":"Saida mak Variabel ? Variavel mak fatin mem\u00f3ria rezerva ida hodi rai val\u00f3r sira. Signifika katak bainhira ita kria variavel ida ita rezerva hela fatin mamuk iha mem\u00f3ria, val\u00f3r sira ne\u2019eb\u00e9 ita rai bele ho tipu data interger ka karakter\u00edstika sira.","title":"Python - Variabel"},{"location":"python_variables/#deklara-variabel","text":"Atu deklara variavel iha python partikularmente ita identifika Naran no Valor: Naran mak hodi identifika variavel. Val\u00f3r bele identifika depois operad\u00f3r (=) . Por ezemplu: a = 1 Notas: a mak identifika ona naran husi variavel no val\u00f3r mak 1 .","title":"Deklara variabel"},{"location":"python_variables/#naran-variavel","text":"Python naran variavel bele refere ba kualk\u00e9r naran husi variavel bele hakerek ho letra mais-kula ka minus-kula no bele hakerek dijit\u00e1l husi 0 to\u2019o 9 no uza s\u00edmbolu sira hanesan underscore(__) >>> naran = \"Mario\" >>> tinan = 30 >>> altura = 168 Print variable naran : >>> print(naran) >>> print(tinan) >>> print(altura) Fo sai rezultadu: Mario 30 168","title":"Naran Variavel"},{"location":"python_variables/#multipla-assignment","text":"Iha python bele kria variavel barak no refere ba val\u00f3r ida de\u2019it ka ita bele kria val\u00f3r ida bele assign ba multipla variavel ka variavel oin-oin. Ezemplu: a. Assign val\u00f3r ida ba multipla variavel ka bele kria multipla variavel f\u00f3 val\u00f3r ida edit. a = b = c = 10 print(a) print(b) print(c) b. Assign multipla valor ba multipla variavel x, y, z = 10, 15, \"hello\" print (x) print (y) print (z)","title":"Multipla Assignment"},{"location":"python_variables/#tipu-variavel","text":"Tipu python variavel iha rua lokal variabel no global variavel. Lokal Variavel Lok\u00e1l variavel mak define iha funsaun nia laran no iha local scope. Ezemplu: # Deklara funsaun def funs(): # defini lokal variabel a = 20 print(\"Local variabel a mak\", a) # bolu funsaun funs() Fo sai rezultadu Local variabel a mak 20 Glob\u00e1l Variabel bele uza jer\u00e1l ka la\u2019\u00f3s iha funsaun nia laran ka glob\u00e1l scope no bele uza m\u00f3s iha funsaun nia laran ka local scope maib\u00e9 tenki uza global keyword. Ezemplu: a = 20 # Global variabel # Deklara funsaun def funs(): print(\"global variabel a mak\", a) # bolu funsaun funs() Fo sai rezultadu global variabel a mak 20 Ezemplu glob\u00e1l variavel iha funsaun nia laran uza global keyword: # Deklara funsaun def funs(): global a a = 20 # defini lokal variabel print(\"global a mak\", a) # bolu funsaun funs() Fo sai rezultadu global a mak 20 Ezemplu kona-ba deklara glob\u00e1l no lok\u00e1l variavel iha funsaun nia laran: # Deklara funsaun def funs(): global a a = 20 h = 2 # defini lokal variabel print(\"global\", a, \"no local\", h) funs() # bolu funsaun Fo sai rezultadu global 20 no local 2","title":"Tipu Variavel"}]}